
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programCOMMA DOT EXAMPLE_KEY IMPLIES LOWER LPAREN MARKER MAX MIN MODEB_KEY MODEH_KEY NOT NUMBER OPERATOR PREDICATE PRIORITY RPAREN SPEECH UPPER WEIGHTterm : LOWER\n            | NUMBER\n            | UPPER\n    zero_predicate : LOWERprogram : program clause\n               | clauseclause : example\n              | modeb\n              | modeh\n              | fact\n              | normal_clause\n              | constraint\n    atom : PREDICATE LPAREN terms RPAREN\n    schema : PREDICATE LPAREN schema_terms RPAREN\n    schema_terms : MARKER term\n                    | MARKER term COMMA schema_terms\n                    | schema\n                    | schema COMMA schema_terms\n                    | term\n                    | term COMMA schema_terms\n    min_max_bias : MAX NUMBER MIN NUMBER\n                    | MAX NUMBER\n    priority_bias : PRIORITY NUMBERweight_bias : WEIGHT NUMBERbias : min_max_bias weight_bias priority_bias\n            | min_max_bias priority_bias\n            | min_max_bias weight_bias\n            | weight_bias priority_bias\n            | weight_bias\n            | priority_bias\n            | min_max_bias\n    example : EXAMPLE_KEY atom DOT\n               | EXAMPLE_KEY NOT atom DOT\n               | EXAMPLE_KEY atom bias DOT\n               | EXAMPLE_KEY NOT atom bias DOT\n               | EXAMPLE_KEY zero_predicate DOT\n               | EXAMPLE_KEY NOT zero_predicate DOT\n               | EXAMPLE_KEY zero_predicate bias DOT\n               | EXAMPLE_KEY NOT zero_predicate bias DOT\n    modeh : MODEH_KEY schema DOT\n             | MODEH_KEY schema bias DOT\n             | MODEH_KEY zero_predicate DOT\n             | MODEH_KEY zero_predicate bias DOT\n    modeb : MODEB_KEY schema DOT\n             | MODEB_KEY NOT schema DOT\n             | MODEB_KEY schema bias DOT\n             | MODEB_KEY NOT schema bias DOT\n             | MODEB_KEY zero_predicate DOT\n             | MODEB_KEY NOT zero_predicate DOT\n             | MODEB_KEY zero_predicate bias DOT\n             | MODEB_KEY NOT zero_predicate bias DOT\n             terms : term\n             | atom\n             | term COMMA terms\n             | atom COMMA terms\n    fact : atom DOT\n            | zero_predicate DOT\n    constraint : IMPLIES body DOT\n    normal_clause : atom IMPLIES body DOT\n                     | zero_predicate IMPLIES body DOT\n    body : literal COMMA body\n            | literal\n    literal : NOT atom\n               | atom\n               | term OPERATOR term\n               | NOT term OPERATOR term\n               | NOT zero_predicate\n               | zero_predicate\n    '
    
_lr_action_items = {'EXAMPLE_KEY':([0,1,2,3,4,5,6,7,8,17,21,23,41,51,55,59,62,64,66,76,83,85,87,88,89,90,91,93,95,100,101,110,111,112,113,],[9,9,-6,-7,-8,-9,-10,-11,-12,-5,-56,-57,-32,-36,-44,-48,-40,-42,-58,-34,-33,-37,-38,-59,-60,-46,-45,-49,-50,-41,-43,-35,-39,-47,-51,]),'MODEB_KEY':([0,1,2,3,4,5,6,7,8,17,21,23,41,51,55,59,62,64,66,76,83,85,87,88,89,90,91,93,95,100,101,110,111,112,113,],[12,12,-6,-7,-8,-9,-10,-11,-12,-5,-56,-57,-32,-36,-44,-48,-40,-42,-58,-34,-33,-37,-38,-59,-60,-46,-45,-49,-50,-41,-43,-35,-39,-47,-51,]),'MODEH_KEY':([0,1,2,3,4,5,6,7,8,17,21,23,41,51,55,59,62,64,66,76,83,85,87,88,89,90,91,93,95,100,101,110,111,112,113,],[13,13,-6,-7,-8,-9,-10,-11,-12,-5,-56,-57,-32,-36,-44,-48,-40,-42,-58,-34,-33,-37,-38,-59,-60,-46,-45,-49,-50,-41,-43,-35,-39,-47,-51,]),'IMPLIES':([0,1,2,3,4,5,6,7,8,10,11,16,17,21,23,41,51,55,59,62,64,66,76,83,85,87,88,89,90,91,93,95,100,101,105,110,111,112,113,],[14,14,-6,-7,-8,-9,-10,-11,-12,22,24,-4,-5,-56,-57,-32,-36,-44,-48,-40,-42,-58,-34,-33,-37,-38,-59,-60,-46,-45,-49,-50,-41,-43,-13,-35,-39,-47,-51,]),'PREDICATE':([0,1,2,3,4,5,6,7,8,9,12,13,14,17,19,21,22,23,24,26,33,40,41,51,55,59,61,62,64,66,67,76,83,85,87,88,89,90,91,93,95,100,101,106,107,110,111,112,113,116,117,122,],[15,15,-6,-7,-8,-9,-10,-11,-12,15,28,28,15,-5,15,-56,15,-57,15,28,15,15,-32,-36,-44,-48,28,-40,-42,-58,15,-34,-33,-37,-38,-59,-60,-46,-45,-49,-50,-41,-43,15,15,-35,-39,-47,-51,28,28,28,]),'LOWER':([0,1,2,3,4,5,6,7,8,9,12,13,14,17,19,21,22,23,24,26,33,40,41,51,55,59,61,62,64,66,67,71,76,83,85,87,88,89,90,91,93,95,97,100,101,103,106,107,110,111,112,113,116,117,122,],[16,16,-6,-7,-8,-9,-10,-11,-12,16,16,16,37,-5,16,-56,37,-57,37,16,37,75,-32,-36,-44,-48,75,-40,-42,-58,37,75,-34,-33,-37,-38,-59,-60,-46,-45,-49,-50,75,-41,-43,75,75,75,-35,-39,-47,-51,75,75,75,]),'$end':([1,2,3,4,5,6,7,8,17,21,23,41,51,55,59,62,64,66,76,83,85,87,88,89,90,91,93,95,100,101,110,111,112,113,],[0,-6,-7,-8,-9,-10,-11,-12,-5,-56,-57,-32,-36,-44,-48,-40,-42,-58,-34,-33,-37,-38,-59,-60,-46,-45,-49,-50,-41,-43,-35,-39,-47,-51,]),'NOT':([9,12,14,22,24,67,],[19,26,33,33,33,33,]),'DOT':([10,11,16,18,20,25,27,29,30,31,32,34,36,37,38,39,42,43,44,45,49,50,52,53,54,56,57,58,60,63,65,68,70,75,77,78,79,80,81,82,84,86,92,94,102,104,105,108,114,118,121,],[21,23,-4,41,51,55,59,62,64,66,-62,-64,-68,-4,-2,-3,76,-31,-29,-30,83,85,87,88,89,90,91,93,95,100,101,-63,-67,-1,-27,-26,-28,-22,-24,-23,110,111,112,113,-61,-65,-13,-25,-14,-66,-21,]),'NUMBER':([14,22,24,33,40,46,47,48,61,67,71,97,103,106,107,109,116,117,122,],[38,38,38,38,38,80,81,82,38,38,38,38,38,38,38,121,38,38,38,]),'UPPER':([14,22,24,33,40,61,67,71,97,103,106,107,116,117,122,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'LPAREN':([15,28,],[40,61,]),'MAX':([16,18,20,25,27,29,30,49,50,57,58,105,114,],[-4,46,46,46,46,46,46,46,46,46,46,-13,-14,]),'WEIGHT':([16,18,20,25,27,29,30,43,49,50,57,58,80,105,114,121,],[-4,47,47,47,47,47,47,47,47,47,47,47,-22,-13,-14,-21,]),'PRIORITY':([16,18,20,25,27,29,30,43,44,49,50,57,58,77,80,81,105,114,121,],[-4,48,48,48,48,48,48,48,48,48,48,48,48,48,-22,-24,-13,-14,-21,]),'COMMA':([32,34,36,37,38,39,68,70,73,74,75,98,99,104,105,114,115,118,],[67,-64,-68,-4,-2,-3,-63,-67,106,107,-1,116,117,-65,-13,-14,122,-66,]),'OPERATOR':([35,37,38,39,69,],[71,-1,-2,-3,103,]),'RPAREN':([38,39,72,73,74,75,96,98,99,105,114,115,119,120,123,124,125,],[-2,-3,105,-52,-53,-1,114,-19,-17,-13,-14,-15,-54,-55,-20,-18,-16,]),'MARKER':([61,116,117,122,],[97,97,97,97,]),'MIN':([80,],[109,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'clause':([0,1,],[2,17,]),'example':([0,1,],[3,3,]),'modeb':([0,1,],[4,4,]),'modeh':([0,1,],[5,5,]),'fact':([0,1,],[6,6,]),'normal_clause':([0,1,],[7,7,]),'constraint':([0,1,],[8,8,]),'atom':([0,1,9,14,19,22,24,33,40,67,106,107,],[10,10,18,34,49,34,34,68,74,34,74,74,]),'zero_predicate':([0,1,9,12,13,14,19,22,24,26,33,67,],[11,11,20,27,30,36,50,36,36,58,70,36,]),'schema':([12,13,26,61,116,117,122,],[25,29,57,99,99,99,99,]),'body':([14,22,24,67,],[31,53,54,102,]),'literal':([14,22,24,67,],[32,32,32,32,]),'term':([14,22,24,33,40,61,67,71,97,103,106,107,116,117,122,],[35,35,35,69,73,98,35,104,115,118,73,73,98,98,98,]),'bias':([18,20,25,27,29,30,49,50,57,58,],[42,52,56,60,63,65,84,86,92,94,]),'min_max_bias':([18,20,25,27,29,30,49,50,57,58,],[43,43,43,43,43,43,43,43,43,43,]),'weight_bias':([18,20,25,27,29,30,43,49,50,57,58,],[44,44,44,44,44,44,77,44,44,44,44,]),'priority_bias':([18,20,25,27,29,30,43,44,49,50,57,58,77,],[45,45,45,45,45,45,78,79,45,45,45,45,108,]),'terms':([40,106,107,],[72,119,120,]),'schema_terms':([61,116,117,122,],[96,123,124,125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('term -> LOWER','term',1,'p_term','parser.py',74),
  ('term -> NUMBER','term',1,'p_term','parser.py',75),
  ('term -> UPPER','term',1,'p_term','parser.py',76),
  ('zero_predicate -> LOWER','zero_predicate',1,'p_zero_predicate','parser.py',81),
  ('program -> program clause','program',2,'p_program','parser.py',86),
  ('program -> clause','program',1,'p_program','parser.py',87),
  ('clause -> example','clause',1,'p_clause','parser.py',95),
  ('clause -> modeb','clause',1,'p_clause','parser.py',96),
  ('clause -> modeh','clause',1,'p_clause','parser.py',97),
  ('clause -> fact','clause',1,'p_clause','parser.py',98),
  ('clause -> normal_clause','clause',1,'p_clause','parser.py',99),
  ('clause -> constraint','clause',1,'p_clause','parser.py',100),
  ('atom -> PREDICATE LPAREN terms RPAREN','atom',4,'p_atom','parser.py',106),
  ('schema -> PREDICATE LPAREN schema_terms RPAREN','schema',4,'p_schema','parser.py',112),
  ('schema_terms -> MARKER term','schema_terms',2,'p_schema_terms','parser.py',118),
  ('schema_terms -> MARKER term COMMA schema_terms','schema_terms',4,'p_schema_terms','parser.py',119),
  ('schema_terms -> schema','schema_terms',1,'p_schema_terms','parser.py',120),
  ('schema_terms -> schema COMMA schema_terms','schema_terms',3,'p_schema_terms','parser.py',121),
  ('schema_terms -> term','schema_terms',1,'p_schema_terms','parser.py',122),
  ('schema_terms -> term COMMA schema_terms','schema_terms',3,'p_schema_terms','parser.py',123),
  ('min_max_bias -> MAX NUMBER MIN NUMBER','min_max_bias',4,'p_min_max_bias','parser.py',146),
  ('min_max_bias -> MAX NUMBER','min_max_bias',2,'p_min_max_bias','parser.py',147),
  ('priority_bias -> PRIORITY NUMBER','priority_bias',2,'p_priority_bias','parser.py',156),
  ('weight_bias -> WEIGHT NUMBER','weight_bias',2,'p_weight_bias','parser.py',161),
  ('bias -> min_max_bias weight_bias priority_bias','bias',3,'p_bias','parser.py',166),
  ('bias -> min_max_bias priority_bias','bias',2,'p_bias','parser.py',167),
  ('bias -> min_max_bias weight_bias','bias',2,'p_bias','parser.py',168),
  ('bias -> weight_bias priority_bias','bias',2,'p_bias','parser.py',169),
  ('bias -> weight_bias','bias',1,'p_bias','parser.py',170),
  ('bias -> priority_bias','bias',1,'p_bias','parser.py',171),
  ('bias -> min_max_bias','bias',1,'p_bias','parser.py',172),
  ('example -> EXAMPLE_KEY atom DOT','example',3,'p_example','parser.py',188),
  ('example -> EXAMPLE_KEY NOT atom DOT','example',4,'p_example','parser.py',189),
  ('example -> EXAMPLE_KEY atom bias DOT','example',4,'p_example','parser.py',190),
  ('example -> EXAMPLE_KEY NOT atom bias DOT','example',5,'p_example','parser.py',191),
  ('example -> EXAMPLE_KEY zero_predicate DOT','example',3,'p_example','parser.py',192),
  ('example -> EXAMPLE_KEY NOT zero_predicate DOT','example',4,'p_example','parser.py',193),
  ('example -> EXAMPLE_KEY zero_predicate bias DOT','example',4,'p_example','parser.py',194),
  ('example -> EXAMPLE_KEY NOT zero_predicate bias DOT','example',5,'p_example','parser.py',195),
  ('modeh -> MODEH_KEY schema DOT','modeh',3,'p_modeh','parser.py',219),
  ('modeh -> MODEH_KEY schema bias DOT','modeh',4,'p_modeh','parser.py',220),
  ('modeh -> MODEH_KEY zero_predicate DOT','modeh',3,'p_modeh','parser.py',221),
  ('modeh -> MODEH_KEY zero_predicate bias DOT','modeh',4,'p_modeh','parser.py',222),
  ('modeb -> MODEB_KEY schema DOT','modeb',3,'p_modeb','parser.py',240),
  ('modeb -> MODEB_KEY NOT schema DOT','modeb',4,'p_modeb','parser.py',241),
  ('modeb -> MODEB_KEY schema bias DOT','modeb',4,'p_modeb','parser.py',242),
  ('modeb -> MODEB_KEY NOT schema bias DOT','modeb',5,'p_modeb','parser.py',243),
  ('modeb -> MODEB_KEY zero_predicate DOT','modeb',3,'p_modeb','parser.py',244),
  ('modeb -> MODEB_KEY NOT zero_predicate DOT','modeb',4,'p_modeb','parser.py',245),
  ('modeb -> MODEB_KEY zero_predicate bias DOT','modeb',4,'p_modeb','parser.py',246),
  ('modeb -> MODEB_KEY NOT zero_predicate bias DOT','modeb',5,'p_modeb','parser.py',247),
  ('terms -> term','terms',1,'p_terms','parser.py',274),
  ('terms -> atom','terms',1,'p_terms','parser.py',275),
  ('terms -> term COMMA terms','terms',3,'p_terms','parser.py',276),
  ('terms -> atom COMMA terms','terms',3,'p_terms','parser.py',277),
  ('fact -> atom DOT','fact',2,'p_fact','parser.py',290),
  ('fact -> zero_predicate DOT','fact',2,'p_fact','parser.py',291),
  ('constraint -> IMPLIES body DOT','constraint',3,'p_constraint','parser.py',297),
  ('normal_clause -> atom IMPLIES body DOT','normal_clause',4,'p_normal_clause','parser.py',303),
  ('normal_clause -> zero_predicate IMPLIES body DOT','normal_clause',4,'p_normal_clause','parser.py',304),
  ('body -> literal COMMA body','body',3,'p_body','parser.py',310),
  ('body -> literal','body',1,'p_body','parser.py',311),
  ('literal -> NOT atom','literal',2,'p_literal','parser.py',320),
  ('literal -> atom','literal',1,'p_literal','parser.py',321),
  ('literal -> term OPERATOR term','literal',3,'p_literal','parser.py',322),
  ('literal -> NOT term OPERATOR term','literal',4,'p_literal','parser.py',323),
  ('literal -> NOT zero_predicate','literal',2,'p_literal','parser.py',324),
  ('literal -> zero_predicate','literal',1,'p_literal','parser.py',325),
]
