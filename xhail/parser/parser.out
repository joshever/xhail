Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SPEECH

Grammar

Rule 0     S' -> program
Rule 1     term -> LOWER
Rule 2     term -> NUMBER
Rule 3     term -> UPPER
Rule 4     zero_predicate -> LOWER
Rule 5     program -> program clause
Rule 6     program -> clause
Rule 7     clause -> example
Rule 8     clause -> modeb
Rule 9     clause -> modeh
Rule 10    clause -> fact
Rule 11    clause -> normal_clause
Rule 12    clause -> constraint
Rule 13    atom -> PREDICATE LPAREN terms RPAREN
Rule 14    schema -> PREDICATE LPAREN schema_terms RPAREN
Rule 15    schema_terms -> MARKER term
Rule 16    schema_terms -> MARKER term COMMA schema_terms
Rule 17    schema_terms -> schema
Rule 18    schema_terms -> schema COMMA schema_terms
Rule 19    schema_terms -> term
Rule 20    schema_terms -> term COMMA schema_terms
Rule 21    min_max_bias -> MAX NUMBER MIN NUMBER
Rule 22    min_max_bias -> MAX NUMBER
Rule 23    priority_bias -> PRIORITY NUMBER
Rule 24    weight_bias -> WEIGHT NUMBER
Rule 25    bias -> min_max_bias weight_bias priority_bias
Rule 26    bias -> min_max_bias priority_bias
Rule 27    bias -> min_max_bias weight_bias
Rule 28    bias -> weight_bias priority_bias
Rule 29    bias -> weight_bias
Rule 30    bias -> priority_bias
Rule 31    bias -> min_max_bias
Rule 32    example -> EXAMPLE_KEY atom DOT
Rule 33    example -> EXAMPLE_KEY NOT atom DOT
Rule 34    example -> EXAMPLE_KEY atom bias DOT
Rule 35    example -> EXAMPLE_KEY NOT atom bias DOT
Rule 36    example -> EXAMPLE_KEY zero_predicate DOT
Rule 37    example -> EXAMPLE_KEY NOT zero_predicate DOT
Rule 38    example -> EXAMPLE_KEY zero_predicate bias DOT
Rule 39    example -> EXAMPLE_KEY NOT zero_predicate bias DOT
Rule 40    modeh -> MODEH_KEY schema DOT
Rule 41    modeh -> MODEH_KEY schema bias DOT
Rule 42    modeh -> MODEH_KEY zero_predicate DOT
Rule 43    modeh -> MODEH_KEY zero_predicate bias DOT
Rule 44    modeb -> MODEB_KEY schema DOT
Rule 45    modeb -> MODEB_KEY NOT schema DOT
Rule 46    modeb -> MODEB_KEY schema bias DOT
Rule 47    modeb -> MODEB_KEY NOT schema bias DOT
Rule 48    modeb -> MODEB_KEY zero_predicate DOT
Rule 49    modeb -> MODEB_KEY NOT zero_predicate DOT
Rule 50    modeb -> MODEB_KEY zero_predicate bias DOT
Rule 51    modeb -> MODEB_KEY NOT zero_predicate bias DOT
Rule 52    terms -> term
Rule 53    terms -> atom
Rule 54    terms -> term COMMA terms
Rule 55    terms -> atom COMMA terms
Rule 56    fact -> atom DOT
Rule 57    fact -> zero_predicate DOT
Rule 58    constraint -> IMPLIES body DOT
Rule 59    normal_clause -> atom IMPLIES body DOT
Rule 60    normal_clause -> zero_predicate IMPLIES body DOT
Rule 61    body -> literal COMMA body
Rule 62    body -> literal
Rule 63    literal -> NOT atom
Rule 64    literal -> atom
Rule 65    literal -> term OPERATOR term
Rule 66    literal -> NOT term OPERATOR term
Rule 67    literal -> NOT zero_predicate
Rule 68    literal -> zero_predicate

Terminals, with rules where they appear

COMMA                : 16 18 20 54 55 61
DOT                  : 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 56 57 58 59 60
EXAMPLE_KEY          : 32 33 34 35 36 37 38 39
IMPLIES              : 58 59 60
LOWER                : 1 4
LPAREN               : 13 14
MARKER               : 15 16
MAX                  : 21 22
MIN                  : 21
MODEB_KEY            : 44 45 46 47 48 49 50 51
MODEH_KEY            : 40 41 42 43
NOT                  : 33 35 37 39 45 47 49 51 63 66 67
NUMBER               : 2 21 21 22 23 24
OPERATOR             : 65 66
PREDICATE            : 13 14
PRIORITY             : 23
RPAREN               : 13 14
SPEECH               : 
UPPER                : 3
WEIGHT               : 24
error                : 

Nonterminals, with rules where they appear

atom                 : 32 33 34 35 53 55 56 59 63 64
bias                 : 34 35 38 39 41 43 46 47 50 51
body                 : 58 59 60 61
clause               : 5 6
constraint           : 12
example              : 7
fact                 : 10
literal              : 61 62
min_max_bias         : 25 26 27 31
modeb                : 8
modeh                : 9
normal_clause        : 11
priority_bias        : 25 26 28 30
program              : 5 0
schema               : 17 18 40 41 44 45 46 47
schema_terms         : 14 16 18 20
term                 : 15 16 19 20 52 54 65 65 66 66
terms                : 13 54 55
weight_bias          : 25 27 28 29
zero_predicate       : 36 37 38 39 42 43 48 49 50 51 57 60 67 68

Parsing method: LALR

state 0

    (0) S' -> . program
    (5) program -> . program clause
    (6) program -> . clause
    (7) clause -> . example
    (8) clause -> . modeb
    (9) clause -> . modeh
    (10) clause -> . fact
    (11) clause -> . normal_clause
    (12) clause -> . constraint
    (32) example -> . EXAMPLE_KEY atom DOT
    (33) example -> . EXAMPLE_KEY NOT atom DOT
    (34) example -> . EXAMPLE_KEY atom bias DOT
    (35) example -> . EXAMPLE_KEY NOT atom bias DOT
    (36) example -> . EXAMPLE_KEY zero_predicate DOT
    (37) example -> . EXAMPLE_KEY NOT zero_predicate DOT
    (38) example -> . EXAMPLE_KEY zero_predicate bias DOT
    (39) example -> . EXAMPLE_KEY NOT zero_predicate bias DOT
    (44) modeb -> . MODEB_KEY schema DOT
    (45) modeb -> . MODEB_KEY NOT schema DOT
    (46) modeb -> . MODEB_KEY schema bias DOT
    (47) modeb -> . MODEB_KEY NOT schema bias DOT
    (48) modeb -> . MODEB_KEY zero_predicate DOT
    (49) modeb -> . MODEB_KEY NOT zero_predicate DOT
    (50) modeb -> . MODEB_KEY zero_predicate bias DOT
    (51) modeb -> . MODEB_KEY NOT zero_predicate bias DOT
    (40) modeh -> . MODEH_KEY schema DOT
    (41) modeh -> . MODEH_KEY schema bias DOT
    (42) modeh -> . MODEH_KEY zero_predicate DOT
    (43) modeh -> . MODEH_KEY zero_predicate bias DOT
    (56) fact -> . atom DOT
    (57) fact -> . zero_predicate DOT
    (59) normal_clause -> . atom IMPLIES body DOT
    (60) normal_clause -> . zero_predicate IMPLIES body DOT
    (58) constraint -> . IMPLIES body DOT
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (4) zero_predicate -> . LOWER

    EXAMPLE_KEY     shift and go to state 9
    MODEB_KEY       shift and go to state 12
    MODEH_KEY       shift and go to state 13
    IMPLIES         shift and go to state 14
    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 16

    program                        shift and go to state 1
    clause                         shift and go to state 2
    example                        shift and go to state 3
    modeb                          shift and go to state 4
    modeh                          shift and go to state 5
    fact                           shift and go to state 6
    normal_clause                  shift and go to state 7
    constraint                     shift and go to state 8
    atom                           shift and go to state 10
    zero_predicate                 shift and go to state 11

state 1

    (0) S' -> program .
    (5) program -> program . clause
    (7) clause -> . example
    (8) clause -> . modeb
    (9) clause -> . modeh
    (10) clause -> . fact
    (11) clause -> . normal_clause
    (12) clause -> . constraint
    (32) example -> . EXAMPLE_KEY atom DOT
    (33) example -> . EXAMPLE_KEY NOT atom DOT
    (34) example -> . EXAMPLE_KEY atom bias DOT
    (35) example -> . EXAMPLE_KEY NOT atom bias DOT
    (36) example -> . EXAMPLE_KEY zero_predicate DOT
    (37) example -> . EXAMPLE_KEY NOT zero_predicate DOT
    (38) example -> . EXAMPLE_KEY zero_predicate bias DOT
    (39) example -> . EXAMPLE_KEY NOT zero_predicate bias DOT
    (44) modeb -> . MODEB_KEY schema DOT
    (45) modeb -> . MODEB_KEY NOT schema DOT
    (46) modeb -> . MODEB_KEY schema bias DOT
    (47) modeb -> . MODEB_KEY NOT schema bias DOT
    (48) modeb -> . MODEB_KEY zero_predicate DOT
    (49) modeb -> . MODEB_KEY NOT zero_predicate DOT
    (50) modeb -> . MODEB_KEY zero_predicate bias DOT
    (51) modeb -> . MODEB_KEY NOT zero_predicate bias DOT
    (40) modeh -> . MODEH_KEY schema DOT
    (41) modeh -> . MODEH_KEY schema bias DOT
    (42) modeh -> . MODEH_KEY zero_predicate DOT
    (43) modeh -> . MODEH_KEY zero_predicate bias DOT
    (56) fact -> . atom DOT
    (57) fact -> . zero_predicate DOT
    (59) normal_clause -> . atom IMPLIES body DOT
    (60) normal_clause -> . zero_predicate IMPLIES body DOT
    (58) constraint -> . IMPLIES body DOT
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (4) zero_predicate -> . LOWER

    EXAMPLE_KEY     shift and go to state 9
    MODEB_KEY       shift and go to state 12
    MODEH_KEY       shift and go to state 13
    IMPLIES         shift and go to state 14
    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 16

    clause                         shift and go to state 17
    example                        shift and go to state 3
    modeb                          shift and go to state 4
    modeh                          shift and go to state 5
    fact                           shift and go to state 6
    normal_clause                  shift and go to state 7
    constraint                     shift and go to state 8
    atom                           shift and go to state 10
    zero_predicate                 shift and go to state 11

state 2

    (6) program -> clause .

    EXAMPLE_KEY     reduce using rule 6 (program -> clause .)
    MODEB_KEY       reduce using rule 6 (program -> clause .)
    MODEH_KEY       reduce using rule 6 (program -> clause .)
    IMPLIES         reduce using rule 6 (program -> clause .)
    PREDICATE       reduce using rule 6 (program -> clause .)
    LOWER           reduce using rule 6 (program -> clause .)
    $end            reduce using rule 6 (program -> clause .)


state 3

    (7) clause -> example .

    EXAMPLE_KEY     reduce using rule 7 (clause -> example .)
    MODEB_KEY       reduce using rule 7 (clause -> example .)
    MODEH_KEY       reduce using rule 7 (clause -> example .)
    IMPLIES         reduce using rule 7 (clause -> example .)
    PREDICATE       reduce using rule 7 (clause -> example .)
    LOWER           reduce using rule 7 (clause -> example .)
    $end            reduce using rule 7 (clause -> example .)


state 4

    (8) clause -> modeb .

    EXAMPLE_KEY     reduce using rule 8 (clause -> modeb .)
    MODEB_KEY       reduce using rule 8 (clause -> modeb .)
    MODEH_KEY       reduce using rule 8 (clause -> modeb .)
    IMPLIES         reduce using rule 8 (clause -> modeb .)
    PREDICATE       reduce using rule 8 (clause -> modeb .)
    LOWER           reduce using rule 8 (clause -> modeb .)
    $end            reduce using rule 8 (clause -> modeb .)


state 5

    (9) clause -> modeh .

    EXAMPLE_KEY     reduce using rule 9 (clause -> modeh .)
    MODEB_KEY       reduce using rule 9 (clause -> modeh .)
    MODEH_KEY       reduce using rule 9 (clause -> modeh .)
    IMPLIES         reduce using rule 9 (clause -> modeh .)
    PREDICATE       reduce using rule 9 (clause -> modeh .)
    LOWER           reduce using rule 9 (clause -> modeh .)
    $end            reduce using rule 9 (clause -> modeh .)


state 6

    (10) clause -> fact .

    EXAMPLE_KEY     reduce using rule 10 (clause -> fact .)
    MODEB_KEY       reduce using rule 10 (clause -> fact .)
    MODEH_KEY       reduce using rule 10 (clause -> fact .)
    IMPLIES         reduce using rule 10 (clause -> fact .)
    PREDICATE       reduce using rule 10 (clause -> fact .)
    LOWER           reduce using rule 10 (clause -> fact .)
    $end            reduce using rule 10 (clause -> fact .)


state 7

    (11) clause -> normal_clause .

    EXAMPLE_KEY     reduce using rule 11 (clause -> normal_clause .)
    MODEB_KEY       reduce using rule 11 (clause -> normal_clause .)
    MODEH_KEY       reduce using rule 11 (clause -> normal_clause .)
    IMPLIES         reduce using rule 11 (clause -> normal_clause .)
    PREDICATE       reduce using rule 11 (clause -> normal_clause .)
    LOWER           reduce using rule 11 (clause -> normal_clause .)
    $end            reduce using rule 11 (clause -> normal_clause .)


state 8

    (12) clause -> constraint .

    EXAMPLE_KEY     reduce using rule 12 (clause -> constraint .)
    MODEB_KEY       reduce using rule 12 (clause -> constraint .)
    MODEH_KEY       reduce using rule 12 (clause -> constraint .)
    IMPLIES         reduce using rule 12 (clause -> constraint .)
    PREDICATE       reduce using rule 12 (clause -> constraint .)
    LOWER           reduce using rule 12 (clause -> constraint .)
    $end            reduce using rule 12 (clause -> constraint .)


state 9

    (32) example -> EXAMPLE_KEY . atom DOT
    (33) example -> EXAMPLE_KEY . NOT atom DOT
    (34) example -> EXAMPLE_KEY . atom bias DOT
    (35) example -> EXAMPLE_KEY . NOT atom bias DOT
    (36) example -> EXAMPLE_KEY . zero_predicate DOT
    (37) example -> EXAMPLE_KEY . NOT zero_predicate DOT
    (38) example -> EXAMPLE_KEY . zero_predicate bias DOT
    (39) example -> EXAMPLE_KEY . NOT zero_predicate bias DOT
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (4) zero_predicate -> . LOWER

    NOT             shift and go to state 19
    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 16

    atom                           shift and go to state 18
    zero_predicate                 shift and go to state 20

state 10

    (56) fact -> atom . DOT
    (59) normal_clause -> atom . IMPLIES body DOT

    DOT             shift and go to state 21
    IMPLIES         shift and go to state 22


state 11

    (57) fact -> zero_predicate . DOT
    (60) normal_clause -> zero_predicate . IMPLIES body DOT

    DOT             shift and go to state 23
    IMPLIES         shift and go to state 24


state 12

    (44) modeb -> MODEB_KEY . schema DOT
    (45) modeb -> MODEB_KEY . NOT schema DOT
    (46) modeb -> MODEB_KEY . schema bias DOT
    (47) modeb -> MODEB_KEY . NOT schema bias DOT
    (48) modeb -> MODEB_KEY . zero_predicate DOT
    (49) modeb -> MODEB_KEY . NOT zero_predicate DOT
    (50) modeb -> MODEB_KEY . zero_predicate bias DOT
    (51) modeb -> MODEB_KEY . NOT zero_predicate bias DOT
    (14) schema -> . PREDICATE LPAREN schema_terms RPAREN
    (4) zero_predicate -> . LOWER

    NOT             shift and go to state 26
    PREDICATE       shift and go to state 28
    LOWER           shift and go to state 16

    schema                         shift and go to state 25
    zero_predicate                 shift and go to state 27

state 13

    (40) modeh -> MODEH_KEY . schema DOT
    (41) modeh -> MODEH_KEY . schema bias DOT
    (42) modeh -> MODEH_KEY . zero_predicate DOT
    (43) modeh -> MODEH_KEY . zero_predicate bias DOT
    (14) schema -> . PREDICATE LPAREN schema_terms RPAREN
    (4) zero_predicate -> . LOWER

    PREDICATE       shift and go to state 28
    LOWER           shift and go to state 16

    schema                         shift and go to state 29
    zero_predicate                 shift and go to state 30

state 14

    (58) constraint -> IMPLIES . body DOT
    (61) body -> . literal COMMA body
    (62) body -> . literal
    (63) literal -> . NOT atom
    (64) literal -> . atom
    (65) literal -> . term OPERATOR term
    (66) literal -> . NOT term OPERATOR term
    (67) literal -> . NOT zero_predicate
    (68) literal -> . zero_predicate
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (4) zero_predicate -> . LOWER

    NOT             shift and go to state 33
    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 37
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    body                           shift and go to state 31
    literal                        shift and go to state 32
    atom                           shift and go to state 34
    term                           shift and go to state 35
    zero_predicate                 shift and go to state 36

state 15

    (13) atom -> PREDICATE . LPAREN terms RPAREN

    LPAREN          shift and go to state 40


state 16

    (4) zero_predicate -> LOWER .

    DOT             reduce using rule 4 (zero_predicate -> LOWER .)
    IMPLIES         reduce using rule 4 (zero_predicate -> LOWER .)
    MAX             reduce using rule 4 (zero_predicate -> LOWER .)
    WEIGHT          reduce using rule 4 (zero_predicate -> LOWER .)
    PRIORITY        reduce using rule 4 (zero_predicate -> LOWER .)


state 17

    (5) program -> program clause .

    EXAMPLE_KEY     reduce using rule 5 (program -> program clause .)
    MODEB_KEY       reduce using rule 5 (program -> program clause .)
    MODEH_KEY       reduce using rule 5 (program -> program clause .)
    IMPLIES         reduce using rule 5 (program -> program clause .)
    PREDICATE       reduce using rule 5 (program -> program clause .)
    LOWER           reduce using rule 5 (program -> program clause .)
    $end            reduce using rule 5 (program -> program clause .)


state 18

    (32) example -> EXAMPLE_KEY atom . DOT
    (34) example -> EXAMPLE_KEY atom . bias DOT
    (25) bias -> . min_max_bias weight_bias priority_bias
    (26) bias -> . min_max_bias priority_bias
    (27) bias -> . min_max_bias weight_bias
    (28) bias -> . weight_bias priority_bias
    (29) bias -> . weight_bias
    (30) bias -> . priority_bias
    (31) bias -> . min_max_bias
    (21) min_max_bias -> . MAX NUMBER MIN NUMBER
    (22) min_max_bias -> . MAX NUMBER
    (24) weight_bias -> . WEIGHT NUMBER
    (23) priority_bias -> . PRIORITY NUMBER

    DOT             shift and go to state 41
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 42
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 19

    (33) example -> EXAMPLE_KEY NOT . atom DOT
    (35) example -> EXAMPLE_KEY NOT . atom bias DOT
    (37) example -> EXAMPLE_KEY NOT . zero_predicate DOT
    (39) example -> EXAMPLE_KEY NOT . zero_predicate bias DOT
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (4) zero_predicate -> . LOWER

    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 16

    atom                           shift and go to state 49
    zero_predicate                 shift and go to state 50

state 20

    (36) example -> EXAMPLE_KEY zero_predicate . DOT
    (38) example -> EXAMPLE_KEY zero_predicate . bias DOT
    (25) bias -> . min_max_bias weight_bias priority_bias
    (26) bias -> . min_max_bias priority_bias
    (27) bias -> . min_max_bias weight_bias
    (28) bias -> . weight_bias priority_bias
    (29) bias -> . weight_bias
    (30) bias -> . priority_bias
    (31) bias -> . min_max_bias
    (21) min_max_bias -> . MAX NUMBER MIN NUMBER
    (22) min_max_bias -> . MAX NUMBER
    (24) weight_bias -> . WEIGHT NUMBER
    (23) priority_bias -> . PRIORITY NUMBER

    DOT             shift and go to state 51
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 52
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 21

    (56) fact -> atom DOT .

    EXAMPLE_KEY     reduce using rule 56 (fact -> atom DOT .)
    MODEB_KEY       reduce using rule 56 (fact -> atom DOT .)
    MODEH_KEY       reduce using rule 56 (fact -> atom DOT .)
    IMPLIES         reduce using rule 56 (fact -> atom DOT .)
    PREDICATE       reduce using rule 56 (fact -> atom DOT .)
    LOWER           reduce using rule 56 (fact -> atom DOT .)
    $end            reduce using rule 56 (fact -> atom DOT .)


state 22

    (59) normal_clause -> atom IMPLIES . body DOT
    (61) body -> . literal COMMA body
    (62) body -> . literal
    (63) literal -> . NOT atom
    (64) literal -> . atom
    (65) literal -> . term OPERATOR term
    (66) literal -> . NOT term OPERATOR term
    (67) literal -> . NOT zero_predicate
    (68) literal -> . zero_predicate
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (4) zero_predicate -> . LOWER

    NOT             shift and go to state 33
    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 37
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    atom                           shift and go to state 34
    body                           shift and go to state 53
    literal                        shift and go to state 32
    term                           shift and go to state 35
    zero_predicate                 shift and go to state 36

state 23

    (57) fact -> zero_predicate DOT .

    EXAMPLE_KEY     reduce using rule 57 (fact -> zero_predicate DOT .)
    MODEB_KEY       reduce using rule 57 (fact -> zero_predicate DOT .)
    MODEH_KEY       reduce using rule 57 (fact -> zero_predicate DOT .)
    IMPLIES         reduce using rule 57 (fact -> zero_predicate DOT .)
    PREDICATE       reduce using rule 57 (fact -> zero_predicate DOT .)
    LOWER           reduce using rule 57 (fact -> zero_predicate DOT .)
    $end            reduce using rule 57 (fact -> zero_predicate DOT .)


state 24

    (60) normal_clause -> zero_predicate IMPLIES . body DOT
    (61) body -> . literal COMMA body
    (62) body -> . literal
    (63) literal -> . NOT atom
    (64) literal -> . atom
    (65) literal -> . term OPERATOR term
    (66) literal -> . NOT term OPERATOR term
    (67) literal -> . NOT zero_predicate
    (68) literal -> . zero_predicate
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (4) zero_predicate -> . LOWER

    NOT             shift and go to state 33
    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 37
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    zero_predicate                 shift and go to state 36
    body                           shift and go to state 54
    literal                        shift and go to state 32
    atom                           shift and go to state 34
    term                           shift and go to state 35

state 25

    (44) modeb -> MODEB_KEY schema . DOT
    (46) modeb -> MODEB_KEY schema . bias DOT
    (25) bias -> . min_max_bias weight_bias priority_bias
    (26) bias -> . min_max_bias priority_bias
    (27) bias -> . min_max_bias weight_bias
    (28) bias -> . weight_bias priority_bias
    (29) bias -> . weight_bias
    (30) bias -> . priority_bias
    (31) bias -> . min_max_bias
    (21) min_max_bias -> . MAX NUMBER MIN NUMBER
    (22) min_max_bias -> . MAX NUMBER
    (24) weight_bias -> . WEIGHT NUMBER
    (23) priority_bias -> . PRIORITY NUMBER

    DOT             shift and go to state 55
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 56
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 26

    (45) modeb -> MODEB_KEY NOT . schema DOT
    (47) modeb -> MODEB_KEY NOT . schema bias DOT
    (49) modeb -> MODEB_KEY NOT . zero_predicate DOT
    (51) modeb -> MODEB_KEY NOT . zero_predicate bias DOT
    (14) schema -> . PREDICATE LPAREN schema_terms RPAREN
    (4) zero_predicate -> . LOWER

    PREDICATE       shift and go to state 28
    LOWER           shift and go to state 16

    schema                         shift and go to state 57
    zero_predicate                 shift and go to state 58

state 27

    (48) modeb -> MODEB_KEY zero_predicate . DOT
    (50) modeb -> MODEB_KEY zero_predicate . bias DOT
    (25) bias -> . min_max_bias weight_bias priority_bias
    (26) bias -> . min_max_bias priority_bias
    (27) bias -> . min_max_bias weight_bias
    (28) bias -> . weight_bias priority_bias
    (29) bias -> . weight_bias
    (30) bias -> . priority_bias
    (31) bias -> . min_max_bias
    (21) min_max_bias -> . MAX NUMBER MIN NUMBER
    (22) min_max_bias -> . MAX NUMBER
    (24) weight_bias -> . WEIGHT NUMBER
    (23) priority_bias -> . PRIORITY NUMBER

    DOT             shift and go to state 59
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 60
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 28

    (14) schema -> PREDICATE . LPAREN schema_terms RPAREN

    LPAREN          shift and go to state 61


state 29

    (40) modeh -> MODEH_KEY schema . DOT
    (41) modeh -> MODEH_KEY schema . bias DOT
    (25) bias -> . min_max_bias weight_bias priority_bias
    (26) bias -> . min_max_bias priority_bias
    (27) bias -> . min_max_bias weight_bias
    (28) bias -> . weight_bias priority_bias
    (29) bias -> . weight_bias
    (30) bias -> . priority_bias
    (31) bias -> . min_max_bias
    (21) min_max_bias -> . MAX NUMBER MIN NUMBER
    (22) min_max_bias -> . MAX NUMBER
    (24) weight_bias -> . WEIGHT NUMBER
    (23) priority_bias -> . PRIORITY NUMBER

    DOT             shift and go to state 62
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 63
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 30

    (42) modeh -> MODEH_KEY zero_predicate . DOT
    (43) modeh -> MODEH_KEY zero_predicate . bias DOT
    (25) bias -> . min_max_bias weight_bias priority_bias
    (26) bias -> . min_max_bias priority_bias
    (27) bias -> . min_max_bias weight_bias
    (28) bias -> . weight_bias priority_bias
    (29) bias -> . weight_bias
    (30) bias -> . priority_bias
    (31) bias -> . min_max_bias
    (21) min_max_bias -> . MAX NUMBER MIN NUMBER
    (22) min_max_bias -> . MAX NUMBER
    (24) weight_bias -> . WEIGHT NUMBER
    (23) priority_bias -> . PRIORITY NUMBER

    DOT             shift and go to state 64
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 65
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 31

    (58) constraint -> IMPLIES body . DOT

    DOT             shift and go to state 66


state 32

    (61) body -> literal . COMMA body
    (62) body -> literal .

    COMMA           shift and go to state 67
    DOT             reduce using rule 62 (body -> literal .)


state 33

    (63) literal -> NOT . atom
    (66) literal -> NOT . term OPERATOR term
    (67) literal -> NOT . zero_predicate
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (4) zero_predicate -> . LOWER

    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 37
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    atom                           shift and go to state 68
    term                           shift and go to state 69
    zero_predicate                 shift and go to state 70

state 34

    (64) literal -> atom .

    COMMA           reduce using rule 64 (literal -> atom .)
    DOT             reduce using rule 64 (literal -> atom .)


state 35

    (65) literal -> term . OPERATOR term

    OPERATOR        shift and go to state 71


state 36

    (68) literal -> zero_predicate .

    COMMA           reduce using rule 68 (literal -> zero_predicate .)
    DOT             reduce using rule 68 (literal -> zero_predicate .)


state 37

    (1) term -> LOWER .
    (4) zero_predicate -> LOWER .

    OPERATOR        reduce using rule 1 (term -> LOWER .)
    COMMA           reduce using rule 4 (zero_predicate -> LOWER .)
    DOT             reduce using rule 4 (zero_predicate -> LOWER .)


state 38

    (2) term -> NUMBER .

    OPERATOR        reduce using rule 2 (term -> NUMBER .)
    COMMA           reduce using rule 2 (term -> NUMBER .)
    RPAREN          reduce using rule 2 (term -> NUMBER .)
    DOT             reduce using rule 2 (term -> NUMBER .)


state 39

    (3) term -> UPPER .

    OPERATOR        reduce using rule 3 (term -> UPPER .)
    COMMA           reduce using rule 3 (term -> UPPER .)
    RPAREN          reduce using rule 3 (term -> UPPER .)
    DOT             reduce using rule 3 (term -> UPPER .)


state 40

    (13) atom -> PREDICATE LPAREN . terms RPAREN
    (52) terms -> . term
    (53) terms -> . atom
    (54) terms -> . term COMMA terms
    (55) terms -> . atom COMMA terms
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (13) atom -> . PREDICATE LPAREN terms RPAREN

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39
    PREDICATE       shift and go to state 15

    terms                          shift and go to state 72
    term                           shift and go to state 73
    atom                           shift and go to state 74

state 41

    (32) example -> EXAMPLE_KEY atom DOT .

    EXAMPLE_KEY     reduce using rule 32 (example -> EXAMPLE_KEY atom DOT .)
    MODEB_KEY       reduce using rule 32 (example -> EXAMPLE_KEY atom DOT .)
    MODEH_KEY       reduce using rule 32 (example -> EXAMPLE_KEY atom DOT .)
    IMPLIES         reduce using rule 32 (example -> EXAMPLE_KEY atom DOT .)
    PREDICATE       reduce using rule 32 (example -> EXAMPLE_KEY atom DOT .)
    LOWER           reduce using rule 32 (example -> EXAMPLE_KEY atom DOT .)
    $end            reduce using rule 32 (example -> EXAMPLE_KEY atom DOT .)


state 42

    (34) example -> EXAMPLE_KEY atom bias . DOT

    DOT             shift and go to state 76


state 43

    (25) bias -> min_max_bias . weight_bias priority_bias
    (26) bias -> min_max_bias . priority_bias
    (27) bias -> min_max_bias . weight_bias
    (31) bias -> min_max_bias .
    (24) weight_bias -> . WEIGHT NUMBER
    (23) priority_bias -> . PRIORITY NUMBER

    DOT             reduce using rule 31 (bias -> min_max_bias .)
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    weight_bias                    shift and go to state 77
    priority_bias                  shift and go to state 78

state 44

    (28) bias -> weight_bias . priority_bias
    (29) bias -> weight_bias .
    (23) priority_bias -> . PRIORITY NUMBER

    DOT             reduce using rule 29 (bias -> weight_bias .)
    PRIORITY        shift and go to state 48

    priority_bias                  shift and go to state 79

state 45

    (30) bias -> priority_bias .

    DOT             reduce using rule 30 (bias -> priority_bias .)


state 46

    (21) min_max_bias -> MAX . NUMBER MIN NUMBER
    (22) min_max_bias -> MAX . NUMBER

    NUMBER          shift and go to state 80


state 47

    (24) weight_bias -> WEIGHT . NUMBER

    NUMBER          shift and go to state 81


state 48

    (23) priority_bias -> PRIORITY . NUMBER

    NUMBER          shift and go to state 82


state 49

    (33) example -> EXAMPLE_KEY NOT atom . DOT
    (35) example -> EXAMPLE_KEY NOT atom . bias DOT
    (25) bias -> . min_max_bias weight_bias priority_bias
    (26) bias -> . min_max_bias priority_bias
    (27) bias -> . min_max_bias weight_bias
    (28) bias -> . weight_bias priority_bias
    (29) bias -> . weight_bias
    (30) bias -> . priority_bias
    (31) bias -> . min_max_bias
    (21) min_max_bias -> . MAX NUMBER MIN NUMBER
    (22) min_max_bias -> . MAX NUMBER
    (24) weight_bias -> . WEIGHT NUMBER
    (23) priority_bias -> . PRIORITY NUMBER

    DOT             shift and go to state 83
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 84
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 50

    (37) example -> EXAMPLE_KEY NOT zero_predicate . DOT
    (39) example -> EXAMPLE_KEY NOT zero_predicate . bias DOT
    (25) bias -> . min_max_bias weight_bias priority_bias
    (26) bias -> . min_max_bias priority_bias
    (27) bias -> . min_max_bias weight_bias
    (28) bias -> . weight_bias priority_bias
    (29) bias -> . weight_bias
    (30) bias -> . priority_bias
    (31) bias -> . min_max_bias
    (21) min_max_bias -> . MAX NUMBER MIN NUMBER
    (22) min_max_bias -> . MAX NUMBER
    (24) weight_bias -> . WEIGHT NUMBER
    (23) priority_bias -> . PRIORITY NUMBER

    DOT             shift and go to state 85
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 86
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 51

    (36) example -> EXAMPLE_KEY zero_predicate DOT .

    EXAMPLE_KEY     reduce using rule 36 (example -> EXAMPLE_KEY zero_predicate DOT .)
    MODEB_KEY       reduce using rule 36 (example -> EXAMPLE_KEY zero_predicate DOT .)
    MODEH_KEY       reduce using rule 36 (example -> EXAMPLE_KEY zero_predicate DOT .)
    IMPLIES         reduce using rule 36 (example -> EXAMPLE_KEY zero_predicate DOT .)
    PREDICATE       reduce using rule 36 (example -> EXAMPLE_KEY zero_predicate DOT .)
    LOWER           reduce using rule 36 (example -> EXAMPLE_KEY zero_predicate DOT .)
    $end            reduce using rule 36 (example -> EXAMPLE_KEY zero_predicate DOT .)


state 52

    (38) example -> EXAMPLE_KEY zero_predicate bias . DOT

    DOT             shift and go to state 87


state 53

    (59) normal_clause -> atom IMPLIES body . DOT

    DOT             shift and go to state 88


state 54

    (60) normal_clause -> zero_predicate IMPLIES body . DOT

    DOT             shift and go to state 89


state 55

    (44) modeb -> MODEB_KEY schema DOT .

    EXAMPLE_KEY     reduce using rule 44 (modeb -> MODEB_KEY schema DOT .)
    MODEB_KEY       reduce using rule 44 (modeb -> MODEB_KEY schema DOT .)
    MODEH_KEY       reduce using rule 44 (modeb -> MODEB_KEY schema DOT .)
    IMPLIES         reduce using rule 44 (modeb -> MODEB_KEY schema DOT .)
    PREDICATE       reduce using rule 44 (modeb -> MODEB_KEY schema DOT .)
    LOWER           reduce using rule 44 (modeb -> MODEB_KEY schema DOT .)
    $end            reduce using rule 44 (modeb -> MODEB_KEY schema DOT .)


state 56

    (46) modeb -> MODEB_KEY schema bias . DOT

    DOT             shift and go to state 90


state 57

    (45) modeb -> MODEB_KEY NOT schema . DOT
    (47) modeb -> MODEB_KEY NOT schema . bias DOT
    (25) bias -> . min_max_bias weight_bias priority_bias
    (26) bias -> . min_max_bias priority_bias
    (27) bias -> . min_max_bias weight_bias
    (28) bias -> . weight_bias priority_bias
    (29) bias -> . weight_bias
    (30) bias -> . priority_bias
    (31) bias -> . min_max_bias
    (21) min_max_bias -> . MAX NUMBER MIN NUMBER
    (22) min_max_bias -> . MAX NUMBER
    (24) weight_bias -> . WEIGHT NUMBER
    (23) priority_bias -> . PRIORITY NUMBER

    DOT             shift and go to state 91
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 92
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 58

    (49) modeb -> MODEB_KEY NOT zero_predicate . DOT
    (51) modeb -> MODEB_KEY NOT zero_predicate . bias DOT
    (25) bias -> . min_max_bias weight_bias priority_bias
    (26) bias -> . min_max_bias priority_bias
    (27) bias -> . min_max_bias weight_bias
    (28) bias -> . weight_bias priority_bias
    (29) bias -> . weight_bias
    (30) bias -> . priority_bias
    (31) bias -> . min_max_bias
    (21) min_max_bias -> . MAX NUMBER MIN NUMBER
    (22) min_max_bias -> . MAX NUMBER
    (24) weight_bias -> . WEIGHT NUMBER
    (23) priority_bias -> . PRIORITY NUMBER

    DOT             shift and go to state 93
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 94
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 59

    (48) modeb -> MODEB_KEY zero_predicate DOT .

    EXAMPLE_KEY     reduce using rule 48 (modeb -> MODEB_KEY zero_predicate DOT .)
    MODEB_KEY       reduce using rule 48 (modeb -> MODEB_KEY zero_predicate DOT .)
    MODEH_KEY       reduce using rule 48 (modeb -> MODEB_KEY zero_predicate DOT .)
    IMPLIES         reduce using rule 48 (modeb -> MODEB_KEY zero_predicate DOT .)
    PREDICATE       reduce using rule 48 (modeb -> MODEB_KEY zero_predicate DOT .)
    LOWER           reduce using rule 48 (modeb -> MODEB_KEY zero_predicate DOT .)
    $end            reduce using rule 48 (modeb -> MODEB_KEY zero_predicate DOT .)


state 60

    (50) modeb -> MODEB_KEY zero_predicate bias . DOT

    DOT             shift and go to state 95


state 61

    (14) schema -> PREDICATE LPAREN . schema_terms RPAREN
    (15) schema_terms -> . MARKER term
    (16) schema_terms -> . MARKER term COMMA schema_terms
    (17) schema_terms -> . schema
    (18) schema_terms -> . schema COMMA schema_terms
    (19) schema_terms -> . term
    (20) schema_terms -> . term COMMA schema_terms
    (14) schema -> . PREDICATE LPAREN schema_terms RPAREN
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER

    MARKER          shift and go to state 97
    PREDICATE       shift and go to state 28
    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    schema_terms                   shift and go to state 96
    term                           shift and go to state 98
    schema                         shift and go to state 99

state 62

    (40) modeh -> MODEH_KEY schema DOT .

    EXAMPLE_KEY     reduce using rule 40 (modeh -> MODEH_KEY schema DOT .)
    MODEB_KEY       reduce using rule 40 (modeh -> MODEH_KEY schema DOT .)
    MODEH_KEY       reduce using rule 40 (modeh -> MODEH_KEY schema DOT .)
    IMPLIES         reduce using rule 40 (modeh -> MODEH_KEY schema DOT .)
    PREDICATE       reduce using rule 40 (modeh -> MODEH_KEY schema DOT .)
    LOWER           reduce using rule 40 (modeh -> MODEH_KEY schema DOT .)
    $end            reduce using rule 40 (modeh -> MODEH_KEY schema DOT .)


state 63

    (41) modeh -> MODEH_KEY schema bias . DOT

    DOT             shift and go to state 100


state 64

    (42) modeh -> MODEH_KEY zero_predicate DOT .

    EXAMPLE_KEY     reduce using rule 42 (modeh -> MODEH_KEY zero_predicate DOT .)
    MODEB_KEY       reduce using rule 42 (modeh -> MODEH_KEY zero_predicate DOT .)
    MODEH_KEY       reduce using rule 42 (modeh -> MODEH_KEY zero_predicate DOT .)
    IMPLIES         reduce using rule 42 (modeh -> MODEH_KEY zero_predicate DOT .)
    PREDICATE       reduce using rule 42 (modeh -> MODEH_KEY zero_predicate DOT .)
    LOWER           reduce using rule 42 (modeh -> MODEH_KEY zero_predicate DOT .)
    $end            reduce using rule 42 (modeh -> MODEH_KEY zero_predicate DOT .)


state 65

    (43) modeh -> MODEH_KEY zero_predicate bias . DOT

    DOT             shift and go to state 101


state 66

    (58) constraint -> IMPLIES body DOT .

    EXAMPLE_KEY     reduce using rule 58 (constraint -> IMPLIES body DOT .)
    MODEB_KEY       reduce using rule 58 (constraint -> IMPLIES body DOT .)
    MODEH_KEY       reduce using rule 58 (constraint -> IMPLIES body DOT .)
    IMPLIES         reduce using rule 58 (constraint -> IMPLIES body DOT .)
    PREDICATE       reduce using rule 58 (constraint -> IMPLIES body DOT .)
    LOWER           reduce using rule 58 (constraint -> IMPLIES body DOT .)
    $end            reduce using rule 58 (constraint -> IMPLIES body DOT .)


state 67

    (61) body -> literal COMMA . body
    (61) body -> . literal COMMA body
    (62) body -> . literal
    (63) literal -> . NOT atom
    (64) literal -> . atom
    (65) literal -> . term OPERATOR term
    (66) literal -> . NOT term OPERATOR term
    (67) literal -> . NOT zero_predicate
    (68) literal -> . zero_predicate
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (4) zero_predicate -> . LOWER

    NOT             shift and go to state 33
    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 37
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    literal                        shift and go to state 32
    body                           shift and go to state 102
    atom                           shift and go to state 34
    term                           shift and go to state 35
    zero_predicate                 shift and go to state 36

state 68

    (63) literal -> NOT atom .

    COMMA           reduce using rule 63 (literal -> NOT atom .)
    DOT             reduce using rule 63 (literal -> NOT atom .)


state 69

    (66) literal -> NOT term . OPERATOR term

    OPERATOR        shift and go to state 103


state 70

    (67) literal -> NOT zero_predicate .

    COMMA           reduce using rule 67 (literal -> NOT zero_predicate .)
    DOT             reduce using rule 67 (literal -> NOT zero_predicate .)


state 71

    (65) literal -> term OPERATOR . term
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    term                           shift and go to state 104

state 72

    (13) atom -> PREDICATE LPAREN terms . RPAREN

    RPAREN          shift and go to state 105


state 73

    (52) terms -> term .
    (54) terms -> term . COMMA terms

    RPAREN          reduce using rule 52 (terms -> term .)
    COMMA           shift and go to state 106


state 74

    (53) terms -> atom .
    (55) terms -> atom . COMMA terms

    RPAREN          reduce using rule 53 (terms -> atom .)
    COMMA           shift and go to state 107


state 75

    (1) term -> LOWER .

    COMMA           reduce using rule 1 (term -> LOWER .)
    RPAREN          reduce using rule 1 (term -> LOWER .)
    DOT             reduce using rule 1 (term -> LOWER .)


state 76

    (34) example -> EXAMPLE_KEY atom bias DOT .

    EXAMPLE_KEY     reduce using rule 34 (example -> EXAMPLE_KEY atom bias DOT .)
    MODEB_KEY       reduce using rule 34 (example -> EXAMPLE_KEY atom bias DOT .)
    MODEH_KEY       reduce using rule 34 (example -> EXAMPLE_KEY atom bias DOT .)
    IMPLIES         reduce using rule 34 (example -> EXAMPLE_KEY atom bias DOT .)
    PREDICATE       reduce using rule 34 (example -> EXAMPLE_KEY atom bias DOT .)
    LOWER           reduce using rule 34 (example -> EXAMPLE_KEY atom bias DOT .)
    $end            reduce using rule 34 (example -> EXAMPLE_KEY atom bias DOT .)


state 77

    (25) bias -> min_max_bias weight_bias . priority_bias
    (27) bias -> min_max_bias weight_bias .
    (23) priority_bias -> . PRIORITY NUMBER

    DOT             reduce using rule 27 (bias -> min_max_bias weight_bias .)
    PRIORITY        shift and go to state 48

    priority_bias                  shift and go to state 108

state 78

    (26) bias -> min_max_bias priority_bias .

    DOT             reduce using rule 26 (bias -> min_max_bias priority_bias .)


state 79

    (28) bias -> weight_bias priority_bias .

    DOT             reduce using rule 28 (bias -> weight_bias priority_bias .)


state 80

    (21) min_max_bias -> MAX NUMBER . MIN NUMBER
    (22) min_max_bias -> MAX NUMBER .

    MIN             shift and go to state 109
    WEIGHT          reduce using rule 22 (min_max_bias -> MAX NUMBER .)
    PRIORITY        reduce using rule 22 (min_max_bias -> MAX NUMBER .)
    DOT             reduce using rule 22 (min_max_bias -> MAX NUMBER .)


state 81

    (24) weight_bias -> WEIGHT NUMBER .

    PRIORITY        reduce using rule 24 (weight_bias -> WEIGHT NUMBER .)
    DOT             reduce using rule 24 (weight_bias -> WEIGHT NUMBER .)


state 82

    (23) priority_bias -> PRIORITY NUMBER .

    DOT             reduce using rule 23 (priority_bias -> PRIORITY NUMBER .)


state 83

    (33) example -> EXAMPLE_KEY NOT atom DOT .

    EXAMPLE_KEY     reduce using rule 33 (example -> EXAMPLE_KEY NOT atom DOT .)
    MODEB_KEY       reduce using rule 33 (example -> EXAMPLE_KEY NOT atom DOT .)
    MODEH_KEY       reduce using rule 33 (example -> EXAMPLE_KEY NOT atom DOT .)
    IMPLIES         reduce using rule 33 (example -> EXAMPLE_KEY NOT atom DOT .)
    PREDICATE       reduce using rule 33 (example -> EXAMPLE_KEY NOT atom DOT .)
    LOWER           reduce using rule 33 (example -> EXAMPLE_KEY NOT atom DOT .)
    $end            reduce using rule 33 (example -> EXAMPLE_KEY NOT atom DOT .)


state 84

    (35) example -> EXAMPLE_KEY NOT atom bias . DOT

    DOT             shift and go to state 110


state 85

    (37) example -> EXAMPLE_KEY NOT zero_predicate DOT .

    EXAMPLE_KEY     reduce using rule 37 (example -> EXAMPLE_KEY NOT zero_predicate DOT .)
    MODEB_KEY       reduce using rule 37 (example -> EXAMPLE_KEY NOT zero_predicate DOT .)
    MODEH_KEY       reduce using rule 37 (example -> EXAMPLE_KEY NOT zero_predicate DOT .)
    IMPLIES         reduce using rule 37 (example -> EXAMPLE_KEY NOT zero_predicate DOT .)
    PREDICATE       reduce using rule 37 (example -> EXAMPLE_KEY NOT zero_predicate DOT .)
    LOWER           reduce using rule 37 (example -> EXAMPLE_KEY NOT zero_predicate DOT .)
    $end            reduce using rule 37 (example -> EXAMPLE_KEY NOT zero_predicate DOT .)


state 86

    (39) example -> EXAMPLE_KEY NOT zero_predicate bias . DOT

    DOT             shift and go to state 111


state 87

    (38) example -> EXAMPLE_KEY zero_predicate bias DOT .

    EXAMPLE_KEY     reduce using rule 38 (example -> EXAMPLE_KEY zero_predicate bias DOT .)
    MODEB_KEY       reduce using rule 38 (example -> EXAMPLE_KEY zero_predicate bias DOT .)
    MODEH_KEY       reduce using rule 38 (example -> EXAMPLE_KEY zero_predicate bias DOT .)
    IMPLIES         reduce using rule 38 (example -> EXAMPLE_KEY zero_predicate bias DOT .)
    PREDICATE       reduce using rule 38 (example -> EXAMPLE_KEY zero_predicate bias DOT .)
    LOWER           reduce using rule 38 (example -> EXAMPLE_KEY zero_predicate bias DOT .)
    $end            reduce using rule 38 (example -> EXAMPLE_KEY zero_predicate bias DOT .)


state 88

    (59) normal_clause -> atom IMPLIES body DOT .

    EXAMPLE_KEY     reduce using rule 59 (normal_clause -> atom IMPLIES body DOT .)
    MODEB_KEY       reduce using rule 59 (normal_clause -> atom IMPLIES body DOT .)
    MODEH_KEY       reduce using rule 59 (normal_clause -> atom IMPLIES body DOT .)
    IMPLIES         reduce using rule 59 (normal_clause -> atom IMPLIES body DOT .)
    PREDICATE       reduce using rule 59 (normal_clause -> atom IMPLIES body DOT .)
    LOWER           reduce using rule 59 (normal_clause -> atom IMPLIES body DOT .)
    $end            reduce using rule 59 (normal_clause -> atom IMPLIES body DOT .)


state 89

    (60) normal_clause -> zero_predicate IMPLIES body DOT .

    EXAMPLE_KEY     reduce using rule 60 (normal_clause -> zero_predicate IMPLIES body DOT .)
    MODEB_KEY       reduce using rule 60 (normal_clause -> zero_predicate IMPLIES body DOT .)
    MODEH_KEY       reduce using rule 60 (normal_clause -> zero_predicate IMPLIES body DOT .)
    IMPLIES         reduce using rule 60 (normal_clause -> zero_predicate IMPLIES body DOT .)
    PREDICATE       reduce using rule 60 (normal_clause -> zero_predicate IMPLIES body DOT .)
    LOWER           reduce using rule 60 (normal_clause -> zero_predicate IMPLIES body DOT .)
    $end            reduce using rule 60 (normal_clause -> zero_predicate IMPLIES body DOT .)


state 90

    (46) modeb -> MODEB_KEY schema bias DOT .

    EXAMPLE_KEY     reduce using rule 46 (modeb -> MODEB_KEY schema bias DOT .)
    MODEB_KEY       reduce using rule 46 (modeb -> MODEB_KEY schema bias DOT .)
    MODEH_KEY       reduce using rule 46 (modeb -> MODEB_KEY schema bias DOT .)
    IMPLIES         reduce using rule 46 (modeb -> MODEB_KEY schema bias DOT .)
    PREDICATE       reduce using rule 46 (modeb -> MODEB_KEY schema bias DOT .)
    LOWER           reduce using rule 46 (modeb -> MODEB_KEY schema bias DOT .)
    $end            reduce using rule 46 (modeb -> MODEB_KEY schema bias DOT .)


state 91

    (45) modeb -> MODEB_KEY NOT schema DOT .

    EXAMPLE_KEY     reduce using rule 45 (modeb -> MODEB_KEY NOT schema DOT .)
    MODEB_KEY       reduce using rule 45 (modeb -> MODEB_KEY NOT schema DOT .)
    MODEH_KEY       reduce using rule 45 (modeb -> MODEB_KEY NOT schema DOT .)
    IMPLIES         reduce using rule 45 (modeb -> MODEB_KEY NOT schema DOT .)
    PREDICATE       reduce using rule 45 (modeb -> MODEB_KEY NOT schema DOT .)
    LOWER           reduce using rule 45 (modeb -> MODEB_KEY NOT schema DOT .)
    $end            reduce using rule 45 (modeb -> MODEB_KEY NOT schema DOT .)


state 92

    (47) modeb -> MODEB_KEY NOT schema bias . DOT

    DOT             shift and go to state 112


state 93

    (49) modeb -> MODEB_KEY NOT zero_predicate DOT .

    EXAMPLE_KEY     reduce using rule 49 (modeb -> MODEB_KEY NOT zero_predicate DOT .)
    MODEB_KEY       reduce using rule 49 (modeb -> MODEB_KEY NOT zero_predicate DOT .)
    MODEH_KEY       reduce using rule 49 (modeb -> MODEB_KEY NOT zero_predicate DOT .)
    IMPLIES         reduce using rule 49 (modeb -> MODEB_KEY NOT zero_predicate DOT .)
    PREDICATE       reduce using rule 49 (modeb -> MODEB_KEY NOT zero_predicate DOT .)
    LOWER           reduce using rule 49 (modeb -> MODEB_KEY NOT zero_predicate DOT .)
    $end            reduce using rule 49 (modeb -> MODEB_KEY NOT zero_predicate DOT .)


state 94

    (51) modeb -> MODEB_KEY NOT zero_predicate bias . DOT

    DOT             shift and go to state 113


state 95

    (50) modeb -> MODEB_KEY zero_predicate bias DOT .

    EXAMPLE_KEY     reduce using rule 50 (modeb -> MODEB_KEY zero_predicate bias DOT .)
    MODEB_KEY       reduce using rule 50 (modeb -> MODEB_KEY zero_predicate bias DOT .)
    MODEH_KEY       reduce using rule 50 (modeb -> MODEB_KEY zero_predicate bias DOT .)
    IMPLIES         reduce using rule 50 (modeb -> MODEB_KEY zero_predicate bias DOT .)
    PREDICATE       reduce using rule 50 (modeb -> MODEB_KEY zero_predicate bias DOT .)
    LOWER           reduce using rule 50 (modeb -> MODEB_KEY zero_predicate bias DOT .)
    $end            reduce using rule 50 (modeb -> MODEB_KEY zero_predicate bias DOT .)


state 96

    (14) schema -> PREDICATE LPAREN schema_terms . RPAREN

    RPAREN          shift and go to state 114


state 97

    (15) schema_terms -> MARKER . term
    (16) schema_terms -> MARKER . term COMMA schema_terms
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    term                           shift and go to state 115

state 98

    (19) schema_terms -> term .
    (20) schema_terms -> term . COMMA schema_terms

    RPAREN          reduce using rule 19 (schema_terms -> term .)
    COMMA           shift and go to state 116


state 99

    (17) schema_terms -> schema .
    (18) schema_terms -> schema . COMMA schema_terms

    RPAREN          reduce using rule 17 (schema_terms -> schema .)
    COMMA           shift and go to state 117


state 100

    (41) modeh -> MODEH_KEY schema bias DOT .

    EXAMPLE_KEY     reduce using rule 41 (modeh -> MODEH_KEY schema bias DOT .)
    MODEB_KEY       reduce using rule 41 (modeh -> MODEH_KEY schema bias DOT .)
    MODEH_KEY       reduce using rule 41 (modeh -> MODEH_KEY schema bias DOT .)
    IMPLIES         reduce using rule 41 (modeh -> MODEH_KEY schema bias DOT .)
    PREDICATE       reduce using rule 41 (modeh -> MODEH_KEY schema bias DOT .)
    LOWER           reduce using rule 41 (modeh -> MODEH_KEY schema bias DOT .)
    $end            reduce using rule 41 (modeh -> MODEH_KEY schema bias DOT .)


state 101

    (43) modeh -> MODEH_KEY zero_predicate bias DOT .

    EXAMPLE_KEY     reduce using rule 43 (modeh -> MODEH_KEY zero_predicate bias DOT .)
    MODEB_KEY       reduce using rule 43 (modeh -> MODEH_KEY zero_predicate bias DOT .)
    MODEH_KEY       reduce using rule 43 (modeh -> MODEH_KEY zero_predicate bias DOT .)
    IMPLIES         reduce using rule 43 (modeh -> MODEH_KEY zero_predicate bias DOT .)
    PREDICATE       reduce using rule 43 (modeh -> MODEH_KEY zero_predicate bias DOT .)
    LOWER           reduce using rule 43 (modeh -> MODEH_KEY zero_predicate bias DOT .)
    $end            reduce using rule 43 (modeh -> MODEH_KEY zero_predicate bias DOT .)


state 102

    (61) body -> literal COMMA body .

    DOT             reduce using rule 61 (body -> literal COMMA body .)


state 103

    (66) literal -> NOT term OPERATOR . term
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    term                           shift and go to state 118

state 104

    (65) literal -> term OPERATOR term .

    COMMA           reduce using rule 65 (literal -> term OPERATOR term .)
    DOT             reduce using rule 65 (literal -> term OPERATOR term .)


state 105

    (13) atom -> PREDICATE LPAREN terms RPAREN .

    DOT             reduce using rule 13 (atom -> PREDICATE LPAREN terms RPAREN .)
    IMPLIES         reduce using rule 13 (atom -> PREDICATE LPAREN terms RPAREN .)
    MAX             reduce using rule 13 (atom -> PREDICATE LPAREN terms RPAREN .)
    WEIGHT          reduce using rule 13 (atom -> PREDICATE LPAREN terms RPAREN .)
    PRIORITY        reduce using rule 13 (atom -> PREDICATE LPAREN terms RPAREN .)
    COMMA           reduce using rule 13 (atom -> PREDICATE LPAREN terms RPAREN .)
    RPAREN          reduce using rule 13 (atom -> PREDICATE LPAREN terms RPAREN .)


state 106

    (54) terms -> term COMMA . terms
    (52) terms -> . term
    (53) terms -> . atom
    (54) terms -> . term COMMA terms
    (55) terms -> . atom COMMA terms
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (13) atom -> . PREDICATE LPAREN terms RPAREN

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39
    PREDICATE       shift and go to state 15

    term                           shift and go to state 73
    terms                          shift and go to state 119
    atom                           shift and go to state 74

state 107

    (55) terms -> atom COMMA . terms
    (52) terms -> . term
    (53) terms -> . atom
    (54) terms -> . term COMMA terms
    (55) terms -> . atom COMMA terms
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (13) atom -> . PREDICATE LPAREN terms RPAREN

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39
    PREDICATE       shift and go to state 15

    atom                           shift and go to state 74
    terms                          shift and go to state 120
    term                           shift and go to state 73

state 108

    (25) bias -> min_max_bias weight_bias priority_bias .

    DOT             reduce using rule 25 (bias -> min_max_bias weight_bias priority_bias .)


state 109

    (21) min_max_bias -> MAX NUMBER MIN . NUMBER

    NUMBER          shift and go to state 121


state 110

    (35) example -> EXAMPLE_KEY NOT atom bias DOT .

    EXAMPLE_KEY     reduce using rule 35 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    MODEB_KEY       reduce using rule 35 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    MODEH_KEY       reduce using rule 35 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    IMPLIES         reduce using rule 35 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    PREDICATE       reduce using rule 35 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    LOWER           reduce using rule 35 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    $end            reduce using rule 35 (example -> EXAMPLE_KEY NOT atom bias DOT .)


state 111

    (39) example -> EXAMPLE_KEY NOT zero_predicate bias DOT .

    EXAMPLE_KEY     reduce using rule 39 (example -> EXAMPLE_KEY NOT zero_predicate bias DOT .)
    MODEB_KEY       reduce using rule 39 (example -> EXAMPLE_KEY NOT zero_predicate bias DOT .)
    MODEH_KEY       reduce using rule 39 (example -> EXAMPLE_KEY NOT zero_predicate bias DOT .)
    IMPLIES         reduce using rule 39 (example -> EXAMPLE_KEY NOT zero_predicate bias DOT .)
    PREDICATE       reduce using rule 39 (example -> EXAMPLE_KEY NOT zero_predicate bias DOT .)
    LOWER           reduce using rule 39 (example -> EXAMPLE_KEY NOT zero_predicate bias DOT .)
    $end            reduce using rule 39 (example -> EXAMPLE_KEY NOT zero_predicate bias DOT .)


state 112

    (47) modeb -> MODEB_KEY NOT schema bias DOT .

    EXAMPLE_KEY     reduce using rule 47 (modeb -> MODEB_KEY NOT schema bias DOT .)
    MODEB_KEY       reduce using rule 47 (modeb -> MODEB_KEY NOT schema bias DOT .)
    MODEH_KEY       reduce using rule 47 (modeb -> MODEB_KEY NOT schema bias DOT .)
    IMPLIES         reduce using rule 47 (modeb -> MODEB_KEY NOT schema bias DOT .)
    PREDICATE       reduce using rule 47 (modeb -> MODEB_KEY NOT schema bias DOT .)
    LOWER           reduce using rule 47 (modeb -> MODEB_KEY NOT schema bias DOT .)
    $end            reduce using rule 47 (modeb -> MODEB_KEY NOT schema bias DOT .)


state 113

    (51) modeb -> MODEB_KEY NOT zero_predicate bias DOT .

    EXAMPLE_KEY     reduce using rule 51 (modeb -> MODEB_KEY NOT zero_predicate bias DOT .)
    MODEB_KEY       reduce using rule 51 (modeb -> MODEB_KEY NOT zero_predicate bias DOT .)
    MODEH_KEY       reduce using rule 51 (modeb -> MODEB_KEY NOT zero_predicate bias DOT .)
    IMPLIES         reduce using rule 51 (modeb -> MODEB_KEY NOT zero_predicate bias DOT .)
    PREDICATE       reduce using rule 51 (modeb -> MODEB_KEY NOT zero_predicate bias DOT .)
    LOWER           reduce using rule 51 (modeb -> MODEB_KEY NOT zero_predicate bias DOT .)
    $end            reduce using rule 51 (modeb -> MODEB_KEY NOT zero_predicate bias DOT .)


state 114

    (14) schema -> PREDICATE LPAREN schema_terms RPAREN .

    DOT             reduce using rule 14 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    MAX             reduce using rule 14 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    WEIGHT          reduce using rule 14 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    PRIORITY        reduce using rule 14 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    COMMA           reduce using rule 14 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    RPAREN          reduce using rule 14 (schema -> PREDICATE LPAREN schema_terms RPAREN .)


state 115

    (15) schema_terms -> MARKER term .
    (16) schema_terms -> MARKER term . COMMA schema_terms

    RPAREN          reduce using rule 15 (schema_terms -> MARKER term .)
    COMMA           shift and go to state 122


state 116

    (20) schema_terms -> term COMMA . schema_terms
    (15) schema_terms -> . MARKER term
    (16) schema_terms -> . MARKER term COMMA schema_terms
    (17) schema_terms -> . schema
    (18) schema_terms -> . schema COMMA schema_terms
    (19) schema_terms -> . term
    (20) schema_terms -> . term COMMA schema_terms
    (14) schema -> . PREDICATE LPAREN schema_terms RPAREN
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER

    MARKER          shift and go to state 97
    PREDICATE       shift and go to state 28
    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    term                           shift and go to state 98
    schema_terms                   shift and go to state 123
    schema                         shift and go to state 99

state 117

    (18) schema_terms -> schema COMMA . schema_terms
    (15) schema_terms -> . MARKER term
    (16) schema_terms -> . MARKER term COMMA schema_terms
    (17) schema_terms -> . schema
    (18) schema_terms -> . schema COMMA schema_terms
    (19) schema_terms -> . term
    (20) schema_terms -> . term COMMA schema_terms
    (14) schema -> . PREDICATE LPAREN schema_terms RPAREN
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER

    MARKER          shift and go to state 97
    PREDICATE       shift and go to state 28
    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    schema                         shift and go to state 99
    schema_terms                   shift and go to state 124
    term                           shift and go to state 98

state 118

    (66) literal -> NOT term OPERATOR term .

    COMMA           reduce using rule 66 (literal -> NOT term OPERATOR term .)
    DOT             reduce using rule 66 (literal -> NOT term OPERATOR term .)


state 119

    (54) terms -> term COMMA terms .

    RPAREN          reduce using rule 54 (terms -> term COMMA terms .)


state 120

    (55) terms -> atom COMMA terms .

    RPAREN          reduce using rule 55 (terms -> atom COMMA terms .)


state 121

    (21) min_max_bias -> MAX NUMBER MIN NUMBER .

    WEIGHT          reduce using rule 21 (min_max_bias -> MAX NUMBER MIN NUMBER .)
    PRIORITY        reduce using rule 21 (min_max_bias -> MAX NUMBER MIN NUMBER .)
    DOT             reduce using rule 21 (min_max_bias -> MAX NUMBER MIN NUMBER .)


state 122

    (16) schema_terms -> MARKER term COMMA . schema_terms
    (15) schema_terms -> . MARKER term
    (16) schema_terms -> . MARKER term COMMA schema_terms
    (17) schema_terms -> . schema
    (18) schema_terms -> . schema COMMA schema_terms
    (19) schema_terms -> . term
    (20) schema_terms -> . term COMMA schema_terms
    (14) schema -> . PREDICATE LPAREN schema_terms RPAREN
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER

    MARKER          shift and go to state 97
    PREDICATE       shift and go to state 28
    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    term                           shift and go to state 98
    schema_terms                   shift and go to state 125
    schema                         shift and go to state 99

state 123

    (20) schema_terms -> term COMMA schema_terms .

    RPAREN          reduce using rule 20 (schema_terms -> term COMMA schema_terms .)


state 124

    (18) schema_terms -> schema COMMA schema_terms .

    RPAREN          reduce using rule 18 (schema_terms -> schema COMMA schema_terms .)


state 125

    (16) schema_terms -> MARKER term COMMA schema_terms .

    RPAREN          reduce using rule 16 (schema_terms -> MARKER term COMMA schema_terms .)

