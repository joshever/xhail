Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     term -> LOWER
Rule 2     term -> NUMBER
Rule 3     term -> UPPER
Rule 4     zero_predicate -> LOWER
Rule 5     program -> program clause
Rule 6     program -> clause
Rule 7     clause -> example
Rule 8     clause -> modeb
Rule 9     clause -> modeh
Rule 10    clause -> fact
Rule 11    clause -> normal_clause
Rule 12    clause -> constraint
Rule 13    atom -> PREDICATE LPAREN terms RPAREN
Rule 14    schema -> PREDICATE LPAREN schema_terms RPAREN
Rule 15    schema_terms -> MARKER term
Rule 16    schema_terms -> MARKER term COMMA schema_terms
Rule 17    schema_terms -> schema
Rule 18    schema_terms -> schema COMMA schema_terms
Rule 19    min_max_bias -> MAX term MIN term
Rule 20    min_max_bias -> MAX term
Rule 21    priority_bias -> PRIORITY term
Rule 22    weight_bias -> WEIGHT term
Rule 23    bias -> min_max_bias weight_bias priority_bias
Rule 24    bias -> min_max_bias priority_bias
Rule 25    bias -> min_max_bias weight_bias
Rule 26    bias -> weight_bias priority_bias
Rule 27    bias -> weight_bias
Rule 28    bias -> priority_bias
Rule 29    bias -> min_max_bias
Rule 30    example -> EXAMPLE_KEY atom DOT
Rule 31    example -> EXAMPLE_KEY NOT atom DOT
Rule 32    example -> EXAMPLE_KEY atom bias DOT
Rule 33    example -> EXAMPLE_KEY NOT atom bias DOT
Rule 34    example -> EXAMPLE_KEY zero_predicate DOT
Rule 35    example -> EXAMPLE_KEY NOT zero_predicate DOT
Rule 36    example -> EXAMPLE_KEY zero_predicate bias DOT
Rule 37    example -> EXAMPLE_KEY NOT zero_predicate bias DOT
Rule 38    modeh -> MODEH_KEY schema DOT
Rule 39    modeh -> MODEH_KEY schema bias DOT
Rule 40    modeh -> MODEH_KEY zero_predicate DOT
Rule 41    modeh -> MODEH_KEY zero_predicate bias DOT
Rule 42    modeb -> MODEB_KEY schema DOT
Rule 43    modeb -> MODEB_KEY NOT schema DOT
Rule 44    modeb -> MODEB_KEY schema bias DOT
Rule 45    modeb -> MODEB_KEY NOT schema bias DOT
Rule 46    modeb -> MODEB_KEY zero_predicate DOT
Rule 47    modeb -> MODEB_KEY NOT zero_predicate DOT
Rule 48    modeb -> MODEB_KEY zero_predicate bias DOT
Rule 49    modeb -> MODEB_KEY NOT zero_predicate bias DOT
Rule 50    terms -> term
Rule 51    terms -> atom
Rule 52    terms -> term COMMA terms
Rule 53    terms -> atom COMMA terms
Rule 54    fact -> atom DOT
Rule 55    fact -> zero_predicate DOT
Rule 56    constraint -> IMPLIES body DOT
Rule 57    normal_clause -> atom IMPLIES body DOT
Rule 58    normal_clause -> zero_predicate IMPLIES body DOT
Rule 59    body -> literal COMMA body
Rule 60    body -> literal
Rule 61    literal -> NOT atom
Rule 62    literal -> atom
Rule 63    literal -> term OPERATOR term
Rule 64    literal -> NOT term OPERATOR term
Rule 65    literal -> NOT zero_predicate
Rule 66    literal -> zero_predicate

Terminals, with rules where they appear

COMMA                : 16 18 52 53 59
DOT                  : 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 54 55 56 57 58
EXAMPLE_KEY          : 30 31 32 33 34 35 36 37
IMPLIES              : 56 57 58
LOWER                : 1 4
LPAREN               : 13 14
MARKER               : 15 16
MAX                  : 19 20
MIN                  : 19
MODEB_KEY            : 42 43 44 45 46 47 48 49
MODEH_KEY            : 38 39 40 41
NOT                  : 31 33 35 37 43 45 47 49 61 64 65
NUMBER               : 2
OPERATOR             : 63 64
PREDICATE            : 13 14
PRIORITY             : 21
RPAREN               : 13 14
UPPER                : 3
WEIGHT               : 22
error                : 

Nonterminals, with rules where they appear

atom                 : 30 31 32 33 51 53 54 57 61 62
bias                 : 32 33 36 37 39 41 44 45 48 49
body                 : 56 57 58 59
clause               : 5 6
constraint           : 12
example              : 7
fact                 : 10
literal              : 59 60
min_max_bias         : 23 24 25 29
modeb                : 8
modeh                : 9
normal_clause        : 11
priority_bias        : 23 24 26 28
program              : 5 0
schema               : 17 18 38 39 42 43 44 45
schema_terms         : 14 16 18
term                 : 15 16 19 19 20 21 22 50 52 63 63 64 64
terms                : 13 52 53
weight_bias          : 23 25 26 27
zero_predicate       : 34 35 36 37 40 41 46 47 48 49 55 58 65 66

Parsing method: LALR

state 0

    (0) S' -> . program
    (5) program -> . program clause
    (6) program -> . clause
    (7) clause -> . example
    (8) clause -> . modeb
    (9) clause -> . modeh
    (10) clause -> . fact
    (11) clause -> . normal_clause
    (12) clause -> . constraint
    (30) example -> . EXAMPLE_KEY atom DOT
    (31) example -> . EXAMPLE_KEY NOT atom DOT
    (32) example -> . EXAMPLE_KEY atom bias DOT
    (33) example -> . EXAMPLE_KEY NOT atom bias DOT
    (34) example -> . EXAMPLE_KEY zero_predicate DOT
    (35) example -> . EXAMPLE_KEY NOT zero_predicate DOT
    (36) example -> . EXAMPLE_KEY zero_predicate bias DOT
    (37) example -> . EXAMPLE_KEY NOT zero_predicate bias DOT
    (42) modeb -> . MODEB_KEY schema DOT
    (43) modeb -> . MODEB_KEY NOT schema DOT
    (44) modeb -> . MODEB_KEY schema bias DOT
    (45) modeb -> . MODEB_KEY NOT schema bias DOT
    (46) modeb -> . MODEB_KEY zero_predicate DOT
    (47) modeb -> . MODEB_KEY NOT zero_predicate DOT
    (48) modeb -> . MODEB_KEY zero_predicate bias DOT
    (49) modeb -> . MODEB_KEY NOT zero_predicate bias DOT
    (38) modeh -> . MODEH_KEY schema DOT
    (39) modeh -> . MODEH_KEY schema bias DOT
    (40) modeh -> . MODEH_KEY zero_predicate DOT
    (41) modeh -> . MODEH_KEY zero_predicate bias DOT
    (54) fact -> . atom DOT
    (55) fact -> . zero_predicate DOT
    (57) normal_clause -> . atom IMPLIES body DOT
    (58) normal_clause -> . zero_predicate IMPLIES body DOT
    (56) constraint -> . IMPLIES body DOT
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (4) zero_predicate -> . LOWER

    EXAMPLE_KEY     shift and go to state 9
    MODEB_KEY       shift and go to state 12
    MODEH_KEY       shift and go to state 13
    IMPLIES         shift and go to state 14
    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 16

    program                        shift and go to state 1
    clause                         shift and go to state 2
    example                        shift and go to state 3
    modeb                          shift and go to state 4
    modeh                          shift and go to state 5
    fact                           shift and go to state 6
    normal_clause                  shift and go to state 7
    constraint                     shift and go to state 8
    atom                           shift and go to state 10
    zero_predicate                 shift and go to state 11

state 1

    (0) S' -> program .
    (5) program -> program . clause
    (7) clause -> . example
    (8) clause -> . modeb
    (9) clause -> . modeh
    (10) clause -> . fact
    (11) clause -> . normal_clause
    (12) clause -> . constraint
    (30) example -> . EXAMPLE_KEY atom DOT
    (31) example -> . EXAMPLE_KEY NOT atom DOT
    (32) example -> . EXAMPLE_KEY atom bias DOT
    (33) example -> . EXAMPLE_KEY NOT atom bias DOT
    (34) example -> . EXAMPLE_KEY zero_predicate DOT
    (35) example -> . EXAMPLE_KEY NOT zero_predicate DOT
    (36) example -> . EXAMPLE_KEY zero_predicate bias DOT
    (37) example -> . EXAMPLE_KEY NOT zero_predicate bias DOT
    (42) modeb -> . MODEB_KEY schema DOT
    (43) modeb -> . MODEB_KEY NOT schema DOT
    (44) modeb -> . MODEB_KEY schema bias DOT
    (45) modeb -> . MODEB_KEY NOT schema bias DOT
    (46) modeb -> . MODEB_KEY zero_predicate DOT
    (47) modeb -> . MODEB_KEY NOT zero_predicate DOT
    (48) modeb -> . MODEB_KEY zero_predicate bias DOT
    (49) modeb -> . MODEB_KEY NOT zero_predicate bias DOT
    (38) modeh -> . MODEH_KEY schema DOT
    (39) modeh -> . MODEH_KEY schema bias DOT
    (40) modeh -> . MODEH_KEY zero_predicate DOT
    (41) modeh -> . MODEH_KEY zero_predicate bias DOT
    (54) fact -> . atom DOT
    (55) fact -> . zero_predicate DOT
    (57) normal_clause -> . atom IMPLIES body DOT
    (58) normal_clause -> . zero_predicate IMPLIES body DOT
    (56) constraint -> . IMPLIES body DOT
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (4) zero_predicate -> . LOWER

    EXAMPLE_KEY     shift and go to state 9
    MODEB_KEY       shift and go to state 12
    MODEH_KEY       shift and go to state 13
    IMPLIES         shift and go to state 14
    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 16

    clause                         shift and go to state 17
    example                        shift and go to state 3
    modeb                          shift and go to state 4
    modeh                          shift and go to state 5
    fact                           shift and go to state 6
    normal_clause                  shift and go to state 7
    constraint                     shift and go to state 8
    atom                           shift and go to state 10
    zero_predicate                 shift and go to state 11

state 2

    (6) program -> clause .

    EXAMPLE_KEY     reduce using rule 6 (program -> clause .)
    MODEB_KEY       reduce using rule 6 (program -> clause .)
    MODEH_KEY       reduce using rule 6 (program -> clause .)
    IMPLIES         reduce using rule 6 (program -> clause .)
    PREDICATE       reduce using rule 6 (program -> clause .)
    LOWER           reduce using rule 6 (program -> clause .)
    $end            reduce using rule 6 (program -> clause .)


state 3

    (7) clause -> example .

    EXAMPLE_KEY     reduce using rule 7 (clause -> example .)
    MODEB_KEY       reduce using rule 7 (clause -> example .)
    MODEH_KEY       reduce using rule 7 (clause -> example .)
    IMPLIES         reduce using rule 7 (clause -> example .)
    PREDICATE       reduce using rule 7 (clause -> example .)
    LOWER           reduce using rule 7 (clause -> example .)
    $end            reduce using rule 7 (clause -> example .)


state 4

    (8) clause -> modeb .

    EXAMPLE_KEY     reduce using rule 8 (clause -> modeb .)
    MODEB_KEY       reduce using rule 8 (clause -> modeb .)
    MODEH_KEY       reduce using rule 8 (clause -> modeb .)
    IMPLIES         reduce using rule 8 (clause -> modeb .)
    PREDICATE       reduce using rule 8 (clause -> modeb .)
    LOWER           reduce using rule 8 (clause -> modeb .)
    $end            reduce using rule 8 (clause -> modeb .)


state 5

    (9) clause -> modeh .

    EXAMPLE_KEY     reduce using rule 9 (clause -> modeh .)
    MODEB_KEY       reduce using rule 9 (clause -> modeh .)
    MODEH_KEY       reduce using rule 9 (clause -> modeh .)
    IMPLIES         reduce using rule 9 (clause -> modeh .)
    PREDICATE       reduce using rule 9 (clause -> modeh .)
    LOWER           reduce using rule 9 (clause -> modeh .)
    $end            reduce using rule 9 (clause -> modeh .)


state 6

    (10) clause -> fact .

    EXAMPLE_KEY     reduce using rule 10 (clause -> fact .)
    MODEB_KEY       reduce using rule 10 (clause -> fact .)
    MODEH_KEY       reduce using rule 10 (clause -> fact .)
    IMPLIES         reduce using rule 10 (clause -> fact .)
    PREDICATE       reduce using rule 10 (clause -> fact .)
    LOWER           reduce using rule 10 (clause -> fact .)
    $end            reduce using rule 10 (clause -> fact .)


state 7

    (11) clause -> normal_clause .

    EXAMPLE_KEY     reduce using rule 11 (clause -> normal_clause .)
    MODEB_KEY       reduce using rule 11 (clause -> normal_clause .)
    MODEH_KEY       reduce using rule 11 (clause -> normal_clause .)
    IMPLIES         reduce using rule 11 (clause -> normal_clause .)
    PREDICATE       reduce using rule 11 (clause -> normal_clause .)
    LOWER           reduce using rule 11 (clause -> normal_clause .)
    $end            reduce using rule 11 (clause -> normal_clause .)


state 8

    (12) clause -> constraint .

    EXAMPLE_KEY     reduce using rule 12 (clause -> constraint .)
    MODEB_KEY       reduce using rule 12 (clause -> constraint .)
    MODEH_KEY       reduce using rule 12 (clause -> constraint .)
    IMPLIES         reduce using rule 12 (clause -> constraint .)
    PREDICATE       reduce using rule 12 (clause -> constraint .)
    LOWER           reduce using rule 12 (clause -> constraint .)
    $end            reduce using rule 12 (clause -> constraint .)


state 9

    (30) example -> EXAMPLE_KEY . atom DOT
    (31) example -> EXAMPLE_KEY . NOT atom DOT
    (32) example -> EXAMPLE_KEY . atom bias DOT
    (33) example -> EXAMPLE_KEY . NOT atom bias DOT
    (34) example -> EXAMPLE_KEY . zero_predicate DOT
    (35) example -> EXAMPLE_KEY . NOT zero_predicate DOT
    (36) example -> EXAMPLE_KEY . zero_predicate bias DOT
    (37) example -> EXAMPLE_KEY . NOT zero_predicate bias DOT
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (4) zero_predicate -> . LOWER

    NOT             shift and go to state 19
    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 16

    atom                           shift and go to state 18
    zero_predicate                 shift and go to state 20

state 10

    (54) fact -> atom . DOT
    (57) normal_clause -> atom . IMPLIES body DOT

    DOT             shift and go to state 21
    IMPLIES         shift and go to state 22


state 11

    (55) fact -> zero_predicate . DOT
    (58) normal_clause -> zero_predicate . IMPLIES body DOT

    DOT             shift and go to state 23
    IMPLIES         shift and go to state 24


state 12

    (42) modeb -> MODEB_KEY . schema DOT
    (43) modeb -> MODEB_KEY . NOT schema DOT
    (44) modeb -> MODEB_KEY . schema bias DOT
    (45) modeb -> MODEB_KEY . NOT schema bias DOT
    (46) modeb -> MODEB_KEY . zero_predicate DOT
    (47) modeb -> MODEB_KEY . NOT zero_predicate DOT
    (48) modeb -> MODEB_KEY . zero_predicate bias DOT
    (49) modeb -> MODEB_KEY . NOT zero_predicate bias DOT
    (14) schema -> . PREDICATE LPAREN schema_terms RPAREN
    (4) zero_predicate -> . LOWER

    NOT             shift and go to state 26
    PREDICATE       shift and go to state 28
    LOWER           shift and go to state 16

    schema                         shift and go to state 25
    zero_predicate                 shift and go to state 27

state 13

    (38) modeh -> MODEH_KEY . schema DOT
    (39) modeh -> MODEH_KEY . schema bias DOT
    (40) modeh -> MODEH_KEY . zero_predicate DOT
    (41) modeh -> MODEH_KEY . zero_predicate bias DOT
    (14) schema -> . PREDICATE LPAREN schema_terms RPAREN
    (4) zero_predicate -> . LOWER

    PREDICATE       shift and go to state 28
    LOWER           shift and go to state 16

    schema                         shift and go to state 29
    zero_predicate                 shift and go to state 30

state 14

    (56) constraint -> IMPLIES . body DOT
    (59) body -> . literal COMMA body
    (60) body -> . literal
    (61) literal -> . NOT atom
    (62) literal -> . atom
    (63) literal -> . term OPERATOR term
    (64) literal -> . NOT term OPERATOR term
    (65) literal -> . NOT zero_predicate
    (66) literal -> . zero_predicate
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (4) zero_predicate -> . LOWER

    NOT             shift and go to state 33
    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 37
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    body                           shift and go to state 31
    literal                        shift and go to state 32
    atom                           shift and go to state 34
    term                           shift and go to state 35
    zero_predicate                 shift and go to state 36

state 15

    (13) atom -> PREDICATE . LPAREN terms RPAREN

    LPAREN          shift and go to state 40


state 16

    (4) zero_predicate -> LOWER .

    DOT             reduce using rule 4 (zero_predicate -> LOWER .)
    IMPLIES         reduce using rule 4 (zero_predicate -> LOWER .)
    MAX             reduce using rule 4 (zero_predicate -> LOWER .)
    WEIGHT          reduce using rule 4 (zero_predicate -> LOWER .)
    PRIORITY        reduce using rule 4 (zero_predicate -> LOWER .)


state 17

    (5) program -> program clause .

    EXAMPLE_KEY     reduce using rule 5 (program -> program clause .)
    MODEB_KEY       reduce using rule 5 (program -> program clause .)
    MODEH_KEY       reduce using rule 5 (program -> program clause .)
    IMPLIES         reduce using rule 5 (program -> program clause .)
    PREDICATE       reduce using rule 5 (program -> program clause .)
    LOWER           reduce using rule 5 (program -> program clause .)
    $end            reduce using rule 5 (program -> program clause .)


state 18

    (30) example -> EXAMPLE_KEY atom . DOT
    (32) example -> EXAMPLE_KEY atom . bias DOT
    (23) bias -> . min_max_bias weight_bias priority_bias
    (24) bias -> . min_max_bias priority_bias
    (25) bias -> . min_max_bias weight_bias
    (26) bias -> . weight_bias priority_bias
    (27) bias -> . weight_bias
    (28) bias -> . priority_bias
    (29) bias -> . min_max_bias
    (19) min_max_bias -> . MAX term MIN term
    (20) min_max_bias -> . MAX term
    (22) weight_bias -> . WEIGHT term
    (21) priority_bias -> . PRIORITY term

    DOT             shift and go to state 41
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 42
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 19

    (31) example -> EXAMPLE_KEY NOT . atom DOT
    (33) example -> EXAMPLE_KEY NOT . atom bias DOT
    (35) example -> EXAMPLE_KEY NOT . zero_predicate DOT
    (37) example -> EXAMPLE_KEY NOT . zero_predicate bias DOT
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (4) zero_predicate -> . LOWER

    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 16

    atom                           shift and go to state 49
    zero_predicate                 shift and go to state 50

state 20

    (34) example -> EXAMPLE_KEY zero_predicate . DOT
    (36) example -> EXAMPLE_KEY zero_predicate . bias DOT
    (23) bias -> . min_max_bias weight_bias priority_bias
    (24) bias -> . min_max_bias priority_bias
    (25) bias -> . min_max_bias weight_bias
    (26) bias -> . weight_bias priority_bias
    (27) bias -> . weight_bias
    (28) bias -> . priority_bias
    (29) bias -> . min_max_bias
    (19) min_max_bias -> . MAX term MIN term
    (20) min_max_bias -> . MAX term
    (22) weight_bias -> . WEIGHT term
    (21) priority_bias -> . PRIORITY term

    DOT             shift and go to state 51
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 52
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 21

    (54) fact -> atom DOT .

    EXAMPLE_KEY     reduce using rule 54 (fact -> atom DOT .)
    MODEB_KEY       reduce using rule 54 (fact -> atom DOT .)
    MODEH_KEY       reduce using rule 54 (fact -> atom DOT .)
    IMPLIES         reduce using rule 54 (fact -> atom DOT .)
    PREDICATE       reduce using rule 54 (fact -> atom DOT .)
    LOWER           reduce using rule 54 (fact -> atom DOT .)
    $end            reduce using rule 54 (fact -> atom DOT .)


state 22

    (57) normal_clause -> atom IMPLIES . body DOT
    (59) body -> . literal COMMA body
    (60) body -> . literal
    (61) literal -> . NOT atom
    (62) literal -> . atom
    (63) literal -> . term OPERATOR term
    (64) literal -> . NOT term OPERATOR term
    (65) literal -> . NOT zero_predicate
    (66) literal -> . zero_predicate
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (4) zero_predicate -> . LOWER

    NOT             shift and go to state 33
    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 37
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    atom                           shift and go to state 34
    body                           shift and go to state 53
    literal                        shift and go to state 32
    term                           shift and go to state 35
    zero_predicate                 shift and go to state 36

state 23

    (55) fact -> zero_predicate DOT .

    EXAMPLE_KEY     reduce using rule 55 (fact -> zero_predicate DOT .)
    MODEB_KEY       reduce using rule 55 (fact -> zero_predicate DOT .)
    MODEH_KEY       reduce using rule 55 (fact -> zero_predicate DOT .)
    IMPLIES         reduce using rule 55 (fact -> zero_predicate DOT .)
    PREDICATE       reduce using rule 55 (fact -> zero_predicate DOT .)
    LOWER           reduce using rule 55 (fact -> zero_predicate DOT .)
    $end            reduce using rule 55 (fact -> zero_predicate DOT .)


state 24

    (58) normal_clause -> zero_predicate IMPLIES . body DOT
    (59) body -> . literal COMMA body
    (60) body -> . literal
    (61) literal -> . NOT atom
    (62) literal -> . atom
    (63) literal -> . term OPERATOR term
    (64) literal -> . NOT term OPERATOR term
    (65) literal -> . NOT zero_predicate
    (66) literal -> . zero_predicate
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (4) zero_predicate -> . LOWER

    NOT             shift and go to state 33
    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 37
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    zero_predicate                 shift and go to state 36
    body                           shift and go to state 54
    literal                        shift and go to state 32
    atom                           shift and go to state 34
    term                           shift and go to state 35

state 25

    (42) modeb -> MODEB_KEY schema . DOT
    (44) modeb -> MODEB_KEY schema . bias DOT
    (23) bias -> . min_max_bias weight_bias priority_bias
    (24) bias -> . min_max_bias priority_bias
    (25) bias -> . min_max_bias weight_bias
    (26) bias -> . weight_bias priority_bias
    (27) bias -> . weight_bias
    (28) bias -> . priority_bias
    (29) bias -> . min_max_bias
    (19) min_max_bias -> . MAX term MIN term
    (20) min_max_bias -> . MAX term
    (22) weight_bias -> . WEIGHT term
    (21) priority_bias -> . PRIORITY term

    DOT             shift and go to state 55
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 56
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 26

    (43) modeb -> MODEB_KEY NOT . schema DOT
    (45) modeb -> MODEB_KEY NOT . schema bias DOT
    (47) modeb -> MODEB_KEY NOT . zero_predicate DOT
    (49) modeb -> MODEB_KEY NOT . zero_predicate bias DOT
    (14) schema -> . PREDICATE LPAREN schema_terms RPAREN
    (4) zero_predicate -> . LOWER

    PREDICATE       shift and go to state 28
    LOWER           shift and go to state 16

    schema                         shift and go to state 57
    zero_predicate                 shift and go to state 58

state 27

    (46) modeb -> MODEB_KEY zero_predicate . DOT
    (48) modeb -> MODEB_KEY zero_predicate . bias DOT
    (23) bias -> . min_max_bias weight_bias priority_bias
    (24) bias -> . min_max_bias priority_bias
    (25) bias -> . min_max_bias weight_bias
    (26) bias -> . weight_bias priority_bias
    (27) bias -> . weight_bias
    (28) bias -> . priority_bias
    (29) bias -> . min_max_bias
    (19) min_max_bias -> . MAX term MIN term
    (20) min_max_bias -> . MAX term
    (22) weight_bias -> . WEIGHT term
    (21) priority_bias -> . PRIORITY term

    DOT             shift and go to state 59
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 60
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 28

    (14) schema -> PREDICATE . LPAREN schema_terms RPAREN

    LPAREN          shift and go to state 61


state 29

    (38) modeh -> MODEH_KEY schema . DOT
    (39) modeh -> MODEH_KEY schema . bias DOT
    (23) bias -> . min_max_bias weight_bias priority_bias
    (24) bias -> . min_max_bias priority_bias
    (25) bias -> . min_max_bias weight_bias
    (26) bias -> . weight_bias priority_bias
    (27) bias -> . weight_bias
    (28) bias -> . priority_bias
    (29) bias -> . min_max_bias
    (19) min_max_bias -> . MAX term MIN term
    (20) min_max_bias -> . MAX term
    (22) weight_bias -> . WEIGHT term
    (21) priority_bias -> . PRIORITY term

    DOT             shift and go to state 62
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 63
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 30

    (40) modeh -> MODEH_KEY zero_predicate . DOT
    (41) modeh -> MODEH_KEY zero_predicate . bias DOT
    (23) bias -> . min_max_bias weight_bias priority_bias
    (24) bias -> . min_max_bias priority_bias
    (25) bias -> . min_max_bias weight_bias
    (26) bias -> . weight_bias priority_bias
    (27) bias -> . weight_bias
    (28) bias -> . priority_bias
    (29) bias -> . min_max_bias
    (19) min_max_bias -> . MAX term MIN term
    (20) min_max_bias -> . MAX term
    (22) weight_bias -> . WEIGHT term
    (21) priority_bias -> . PRIORITY term

    DOT             shift and go to state 64
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 65
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 31

    (56) constraint -> IMPLIES body . DOT

    DOT             shift and go to state 66


state 32

    (59) body -> literal . COMMA body
    (60) body -> literal .

    COMMA           shift and go to state 67
    DOT             reduce using rule 60 (body -> literal .)


state 33

    (61) literal -> NOT . atom
    (64) literal -> NOT . term OPERATOR term
    (65) literal -> NOT . zero_predicate
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (4) zero_predicate -> . LOWER

    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 37
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    atom                           shift and go to state 68
    term                           shift and go to state 69
    zero_predicate                 shift and go to state 70

state 34

    (62) literal -> atom .

    COMMA           reduce using rule 62 (literal -> atom .)
    DOT             reduce using rule 62 (literal -> atom .)


state 35

    (63) literal -> term . OPERATOR term

    OPERATOR        shift and go to state 71


state 36

    (66) literal -> zero_predicate .

    COMMA           reduce using rule 66 (literal -> zero_predicate .)
    DOT             reduce using rule 66 (literal -> zero_predicate .)


state 37

    (1) term -> LOWER .
    (4) zero_predicate -> LOWER .

    OPERATOR        reduce using rule 1 (term -> LOWER .)
    COMMA           reduce using rule 4 (zero_predicate -> LOWER .)
    DOT             reduce using rule 4 (zero_predicate -> LOWER .)


state 38

    (2) term -> NUMBER .

    OPERATOR        reduce using rule 2 (term -> NUMBER .)
    COMMA           reduce using rule 2 (term -> NUMBER .)
    RPAREN          reduce using rule 2 (term -> NUMBER .)
    MIN             reduce using rule 2 (term -> NUMBER .)
    WEIGHT          reduce using rule 2 (term -> NUMBER .)
    PRIORITY        reduce using rule 2 (term -> NUMBER .)
    DOT             reduce using rule 2 (term -> NUMBER .)


state 39

    (3) term -> UPPER .

    OPERATOR        reduce using rule 3 (term -> UPPER .)
    COMMA           reduce using rule 3 (term -> UPPER .)
    RPAREN          reduce using rule 3 (term -> UPPER .)
    MIN             reduce using rule 3 (term -> UPPER .)
    WEIGHT          reduce using rule 3 (term -> UPPER .)
    PRIORITY        reduce using rule 3 (term -> UPPER .)
    DOT             reduce using rule 3 (term -> UPPER .)


state 40

    (13) atom -> PREDICATE LPAREN . terms RPAREN
    (50) terms -> . term
    (51) terms -> . atom
    (52) terms -> . term COMMA terms
    (53) terms -> . atom COMMA terms
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (13) atom -> . PREDICATE LPAREN terms RPAREN

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39
    PREDICATE       shift and go to state 15

    terms                          shift and go to state 72
    term                           shift and go to state 73
    atom                           shift and go to state 74

state 41

    (30) example -> EXAMPLE_KEY atom DOT .

    EXAMPLE_KEY     reduce using rule 30 (example -> EXAMPLE_KEY atom DOT .)
    MODEB_KEY       reduce using rule 30 (example -> EXAMPLE_KEY atom DOT .)
    MODEH_KEY       reduce using rule 30 (example -> EXAMPLE_KEY atom DOT .)
    IMPLIES         reduce using rule 30 (example -> EXAMPLE_KEY atom DOT .)
    PREDICATE       reduce using rule 30 (example -> EXAMPLE_KEY atom DOT .)
    LOWER           reduce using rule 30 (example -> EXAMPLE_KEY atom DOT .)
    $end            reduce using rule 30 (example -> EXAMPLE_KEY atom DOT .)


state 42

    (32) example -> EXAMPLE_KEY atom bias . DOT

    DOT             shift and go to state 76


state 43

    (23) bias -> min_max_bias . weight_bias priority_bias
    (24) bias -> min_max_bias . priority_bias
    (25) bias -> min_max_bias . weight_bias
    (29) bias -> min_max_bias .
    (22) weight_bias -> . WEIGHT term
    (21) priority_bias -> . PRIORITY term

    DOT             reduce using rule 29 (bias -> min_max_bias .)
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    weight_bias                    shift and go to state 77
    priority_bias                  shift and go to state 78

state 44

    (26) bias -> weight_bias . priority_bias
    (27) bias -> weight_bias .
    (21) priority_bias -> . PRIORITY term

    DOT             reduce using rule 27 (bias -> weight_bias .)
    PRIORITY        shift and go to state 48

    priority_bias                  shift and go to state 79

state 45

    (28) bias -> priority_bias .

    DOT             reduce using rule 28 (bias -> priority_bias .)


state 46

    (19) min_max_bias -> MAX . term MIN term
    (20) min_max_bias -> MAX . term
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    term                           shift and go to state 80

state 47

    (22) weight_bias -> WEIGHT . term
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    term                           shift and go to state 81

state 48

    (21) priority_bias -> PRIORITY . term
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    term                           shift and go to state 82

state 49

    (31) example -> EXAMPLE_KEY NOT atom . DOT
    (33) example -> EXAMPLE_KEY NOT atom . bias DOT
    (23) bias -> . min_max_bias weight_bias priority_bias
    (24) bias -> . min_max_bias priority_bias
    (25) bias -> . min_max_bias weight_bias
    (26) bias -> . weight_bias priority_bias
    (27) bias -> . weight_bias
    (28) bias -> . priority_bias
    (29) bias -> . min_max_bias
    (19) min_max_bias -> . MAX term MIN term
    (20) min_max_bias -> . MAX term
    (22) weight_bias -> . WEIGHT term
    (21) priority_bias -> . PRIORITY term

    DOT             shift and go to state 83
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 84
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 50

    (35) example -> EXAMPLE_KEY NOT zero_predicate . DOT
    (37) example -> EXAMPLE_KEY NOT zero_predicate . bias DOT
    (23) bias -> . min_max_bias weight_bias priority_bias
    (24) bias -> . min_max_bias priority_bias
    (25) bias -> . min_max_bias weight_bias
    (26) bias -> . weight_bias priority_bias
    (27) bias -> . weight_bias
    (28) bias -> . priority_bias
    (29) bias -> . min_max_bias
    (19) min_max_bias -> . MAX term MIN term
    (20) min_max_bias -> . MAX term
    (22) weight_bias -> . WEIGHT term
    (21) priority_bias -> . PRIORITY term

    DOT             shift and go to state 85
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 86
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 51

    (34) example -> EXAMPLE_KEY zero_predicate DOT .

    EXAMPLE_KEY     reduce using rule 34 (example -> EXAMPLE_KEY zero_predicate DOT .)
    MODEB_KEY       reduce using rule 34 (example -> EXAMPLE_KEY zero_predicate DOT .)
    MODEH_KEY       reduce using rule 34 (example -> EXAMPLE_KEY zero_predicate DOT .)
    IMPLIES         reduce using rule 34 (example -> EXAMPLE_KEY zero_predicate DOT .)
    PREDICATE       reduce using rule 34 (example -> EXAMPLE_KEY zero_predicate DOT .)
    LOWER           reduce using rule 34 (example -> EXAMPLE_KEY zero_predicate DOT .)
    $end            reduce using rule 34 (example -> EXAMPLE_KEY zero_predicate DOT .)


state 52

    (36) example -> EXAMPLE_KEY zero_predicate bias . DOT

    DOT             shift and go to state 87


state 53

    (57) normal_clause -> atom IMPLIES body . DOT

    DOT             shift and go to state 88


state 54

    (58) normal_clause -> zero_predicate IMPLIES body . DOT

    DOT             shift and go to state 89


state 55

    (42) modeb -> MODEB_KEY schema DOT .

    EXAMPLE_KEY     reduce using rule 42 (modeb -> MODEB_KEY schema DOT .)
    MODEB_KEY       reduce using rule 42 (modeb -> MODEB_KEY schema DOT .)
    MODEH_KEY       reduce using rule 42 (modeb -> MODEB_KEY schema DOT .)
    IMPLIES         reduce using rule 42 (modeb -> MODEB_KEY schema DOT .)
    PREDICATE       reduce using rule 42 (modeb -> MODEB_KEY schema DOT .)
    LOWER           reduce using rule 42 (modeb -> MODEB_KEY schema DOT .)
    $end            reduce using rule 42 (modeb -> MODEB_KEY schema DOT .)


state 56

    (44) modeb -> MODEB_KEY schema bias . DOT

    DOT             shift and go to state 90


state 57

    (43) modeb -> MODEB_KEY NOT schema . DOT
    (45) modeb -> MODEB_KEY NOT schema . bias DOT
    (23) bias -> . min_max_bias weight_bias priority_bias
    (24) bias -> . min_max_bias priority_bias
    (25) bias -> . min_max_bias weight_bias
    (26) bias -> . weight_bias priority_bias
    (27) bias -> . weight_bias
    (28) bias -> . priority_bias
    (29) bias -> . min_max_bias
    (19) min_max_bias -> . MAX term MIN term
    (20) min_max_bias -> . MAX term
    (22) weight_bias -> . WEIGHT term
    (21) priority_bias -> . PRIORITY term

    DOT             shift and go to state 91
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 92
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 58

    (47) modeb -> MODEB_KEY NOT zero_predicate . DOT
    (49) modeb -> MODEB_KEY NOT zero_predicate . bias DOT
    (23) bias -> . min_max_bias weight_bias priority_bias
    (24) bias -> . min_max_bias priority_bias
    (25) bias -> . min_max_bias weight_bias
    (26) bias -> . weight_bias priority_bias
    (27) bias -> . weight_bias
    (28) bias -> . priority_bias
    (29) bias -> . min_max_bias
    (19) min_max_bias -> . MAX term MIN term
    (20) min_max_bias -> . MAX term
    (22) weight_bias -> . WEIGHT term
    (21) priority_bias -> . PRIORITY term

    DOT             shift and go to state 93
    MAX             shift and go to state 46
    WEIGHT          shift and go to state 47
    PRIORITY        shift and go to state 48

    bias                           shift and go to state 94
    min_max_bias                   shift and go to state 43
    weight_bias                    shift and go to state 44
    priority_bias                  shift and go to state 45

state 59

    (46) modeb -> MODEB_KEY zero_predicate DOT .

    EXAMPLE_KEY     reduce using rule 46 (modeb -> MODEB_KEY zero_predicate DOT .)
    MODEB_KEY       reduce using rule 46 (modeb -> MODEB_KEY zero_predicate DOT .)
    MODEH_KEY       reduce using rule 46 (modeb -> MODEB_KEY zero_predicate DOT .)
    IMPLIES         reduce using rule 46 (modeb -> MODEB_KEY zero_predicate DOT .)
    PREDICATE       reduce using rule 46 (modeb -> MODEB_KEY zero_predicate DOT .)
    LOWER           reduce using rule 46 (modeb -> MODEB_KEY zero_predicate DOT .)
    $end            reduce using rule 46 (modeb -> MODEB_KEY zero_predicate DOT .)


state 60

    (48) modeb -> MODEB_KEY zero_predicate bias . DOT

    DOT             shift and go to state 95


state 61

    (14) schema -> PREDICATE LPAREN . schema_terms RPAREN
    (15) schema_terms -> . MARKER term
    (16) schema_terms -> . MARKER term COMMA schema_terms
    (17) schema_terms -> . schema
    (18) schema_terms -> . schema COMMA schema_terms
    (14) schema -> . PREDICATE LPAREN schema_terms RPAREN

    MARKER          shift and go to state 97
    PREDICATE       shift and go to state 28

    schema_terms                   shift and go to state 96
    schema                         shift and go to state 98

state 62

    (38) modeh -> MODEH_KEY schema DOT .

    EXAMPLE_KEY     reduce using rule 38 (modeh -> MODEH_KEY schema DOT .)
    MODEB_KEY       reduce using rule 38 (modeh -> MODEH_KEY schema DOT .)
    MODEH_KEY       reduce using rule 38 (modeh -> MODEH_KEY schema DOT .)
    IMPLIES         reduce using rule 38 (modeh -> MODEH_KEY schema DOT .)
    PREDICATE       reduce using rule 38 (modeh -> MODEH_KEY schema DOT .)
    LOWER           reduce using rule 38 (modeh -> MODEH_KEY schema DOT .)
    $end            reduce using rule 38 (modeh -> MODEH_KEY schema DOT .)


state 63

    (39) modeh -> MODEH_KEY schema bias . DOT

    DOT             shift and go to state 99


state 64

    (40) modeh -> MODEH_KEY zero_predicate DOT .

    EXAMPLE_KEY     reduce using rule 40 (modeh -> MODEH_KEY zero_predicate DOT .)
    MODEB_KEY       reduce using rule 40 (modeh -> MODEH_KEY zero_predicate DOT .)
    MODEH_KEY       reduce using rule 40 (modeh -> MODEH_KEY zero_predicate DOT .)
    IMPLIES         reduce using rule 40 (modeh -> MODEH_KEY zero_predicate DOT .)
    PREDICATE       reduce using rule 40 (modeh -> MODEH_KEY zero_predicate DOT .)
    LOWER           reduce using rule 40 (modeh -> MODEH_KEY zero_predicate DOT .)
    $end            reduce using rule 40 (modeh -> MODEH_KEY zero_predicate DOT .)


state 65

    (41) modeh -> MODEH_KEY zero_predicate bias . DOT

    DOT             shift and go to state 100


state 66

    (56) constraint -> IMPLIES body DOT .

    EXAMPLE_KEY     reduce using rule 56 (constraint -> IMPLIES body DOT .)
    MODEB_KEY       reduce using rule 56 (constraint -> IMPLIES body DOT .)
    MODEH_KEY       reduce using rule 56 (constraint -> IMPLIES body DOT .)
    IMPLIES         reduce using rule 56 (constraint -> IMPLIES body DOT .)
    PREDICATE       reduce using rule 56 (constraint -> IMPLIES body DOT .)
    LOWER           reduce using rule 56 (constraint -> IMPLIES body DOT .)
    $end            reduce using rule 56 (constraint -> IMPLIES body DOT .)


state 67

    (59) body -> literal COMMA . body
    (59) body -> . literal COMMA body
    (60) body -> . literal
    (61) literal -> . NOT atom
    (62) literal -> . atom
    (63) literal -> . term OPERATOR term
    (64) literal -> . NOT term OPERATOR term
    (65) literal -> . NOT zero_predicate
    (66) literal -> . zero_predicate
    (13) atom -> . PREDICATE LPAREN terms RPAREN
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (4) zero_predicate -> . LOWER

    NOT             shift and go to state 33
    PREDICATE       shift and go to state 15
    LOWER           shift and go to state 37
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    literal                        shift and go to state 32
    body                           shift and go to state 101
    atom                           shift and go to state 34
    term                           shift and go to state 35
    zero_predicate                 shift and go to state 36

state 68

    (61) literal -> NOT atom .

    COMMA           reduce using rule 61 (literal -> NOT atom .)
    DOT             reduce using rule 61 (literal -> NOT atom .)


state 69

    (64) literal -> NOT term . OPERATOR term

    OPERATOR        shift and go to state 102


state 70

    (65) literal -> NOT zero_predicate .

    COMMA           reduce using rule 65 (literal -> NOT zero_predicate .)
    DOT             reduce using rule 65 (literal -> NOT zero_predicate .)


state 71

    (63) literal -> term OPERATOR . term
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    term                           shift and go to state 103

state 72

    (13) atom -> PREDICATE LPAREN terms . RPAREN

    RPAREN          shift and go to state 104


state 73

    (50) terms -> term .
    (52) terms -> term . COMMA terms

    RPAREN          reduce using rule 50 (terms -> term .)
    COMMA           shift and go to state 105


state 74

    (51) terms -> atom .
    (53) terms -> atom . COMMA terms

    RPAREN          reduce using rule 51 (terms -> atom .)
    COMMA           shift and go to state 106


state 75

    (1) term -> LOWER .

    COMMA           reduce using rule 1 (term -> LOWER .)
    RPAREN          reduce using rule 1 (term -> LOWER .)
    MIN             reduce using rule 1 (term -> LOWER .)
    WEIGHT          reduce using rule 1 (term -> LOWER .)
    PRIORITY        reduce using rule 1 (term -> LOWER .)
    DOT             reduce using rule 1 (term -> LOWER .)


state 76

    (32) example -> EXAMPLE_KEY atom bias DOT .

    EXAMPLE_KEY     reduce using rule 32 (example -> EXAMPLE_KEY atom bias DOT .)
    MODEB_KEY       reduce using rule 32 (example -> EXAMPLE_KEY atom bias DOT .)
    MODEH_KEY       reduce using rule 32 (example -> EXAMPLE_KEY atom bias DOT .)
    IMPLIES         reduce using rule 32 (example -> EXAMPLE_KEY atom bias DOT .)
    PREDICATE       reduce using rule 32 (example -> EXAMPLE_KEY atom bias DOT .)
    LOWER           reduce using rule 32 (example -> EXAMPLE_KEY atom bias DOT .)
    $end            reduce using rule 32 (example -> EXAMPLE_KEY atom bias DOT .)


state 77

    (23) bias -> min_max_bias weight_bias . priority_bias
    (25) bias -> min_max_bias weight_bias .
    (21) priority_bias -> . PRIORITY term

    DOT             reduce using rule 25 (bias -> min_max_bias weight_bias .)
    PRIORITY        shift and go to state 48

    priority_bias                  shift and go to state 107

state 78

    (24) bias -> min_max_bias priority_bias .

    DOT             reduce using rule 24 (bias -> min_max_bias priority_bias .)


state 79

    (26) bias -> weight_bias priority_bias .

    DOT             reduce using rule 26 (bias -> weight_bias priority_bias .)


state 80

    (19) min_max_bias -> MAX term . MIN term
    (20) min_max_bias -> MAX term .

    MIN             shift and go to state 108
    WEIGHT          reduce using rule 20 (min_max_bias -> MAX term .)
    PRIORITY        reduce using rule 20 (min_max_bias -> MAX term .)
    DOT             reduce using rule 20 (min_max_bias -> MAX term .)


state 81

    (22) weight_bias -> WEIGHT term .

    PRIORITY        reduce using rule 22 (weight_bias -> WEIGHT term .)
    DOT             reduce using rule 22 (weight_bias -> WEIGHT term .)


state 82

    (21) priority_bias -> PRIORITY term .

    DOT             reduce using rule 21 (priority_bias -> PRIORITY term .)


state 83

    (31) example -> EXAMPLE_KEY NOT atom DOT .

    EXAMPLE_KEY     reduce using rule 31 (example -> EXAMPLE_KEY NOT atom DOT .)
    MODEB_KEY       reduce using rule 31 (example -> EXAMPLE_KEY NOT atom DOT .)
    MODEH_KEY       reduce using rule 31 (example -> EXAMPLE_KEY NOT atom DOT .)
    IMPLIES         reduce using rule 31 (example -> EXAMPLE_KEY NOT atom DOT .)
    PREDICATE       reduce using rule 31 (example -> EXAMPLE_KEY NOT atom DOT .)
    LOWER           reduce using rule 31 (example -> EXAMPLE_KEY NOT atom DOT .)
    $end            reduce using rule 31 (example -> EXAMPLE_KEY NOT atom DOT .)


state 84

    (33) example -> EXAMPLE_KEY NOT atom bias . DOT

    DOT             shift and go to state 109


state 85

    (35) example -> EXAMPLE_KEY NOT zero_predicate DOT .

    EXAMPLE_KEY     reduce using rule 35 (example -> EXAMPLE_KEY NOT zero_predicate DOT .)
    MODEB_KEY       reduce using rule 35 (example -> EXAMPLE_KEY NOT zero_predicate DOT .)
    MODEH_KEY       reduce using rule 35 (example -> EXAMPLE_KEY NOT zero_predicate DOT .)
    IMPLIES         reduce using rule 35 (example -> EXAMPLE_KEY NOT zero_predicate DOT .)
    PREDICATE       reduce using rule 35 (example -> EXAMPLE_KEY NOT zero_predicate DOT .)
    LOWER           reduce using rule 35 (example -> EXAMPLE_KEY NOT zero_predicate DOT .)
    $end            reduce using rule 35 (example -> EXAMPLE_KEY NOT zero_predicate DOT .)


state 86

    (37) example -> EXAMPLE_KEY NOT zero_predicate bias . DOT

    DOT             shift and go to state 110


state 87

    (36) example -> EXAMPLE_KEY zero_predicate bias DOT .

    EXAMPLE_KEY     reduce using rule 36 (example -> EXAMPLE_KEY zero_predicate bias DOT .)
    MODEB_KEY       reduce using rule 36 (example -> EXAMPLE_KEY zero_predicate bias DOT .)
    MODEH_KEY       reduce using rule 36 (example -> EXAMPLE_KEY zero_predicate bias DOT .)
    IMPLIES         reduce using rule 36 (example -> EXAMPLE_KEY zero_predicate bias DOT .)
    PREDICATE       reduce using rule 36 (example -> EXAMPLE_KEY zero_predicate bias DOT .)
    LOWER           reduce using rule 36 (example -> EXAMPLE_KEY zero_predicate bias DOT .)
    $end            reduce using rule 36 (example -> EXAMPLE_KEY zero_predicate bias DOT .)


state 88

    (57) normal_clause -> atom IMPLIES body DOT .

    EXAMPLE_KEY     reduce using rule 57 (normal_clause -> atom IMPLIES body DOT .)
    MODEB_KEY       reduce using rule 57 (normal_clause -> atom IMPLIES body DOT .)
    MODEH_KEY       reduce using rule 57 (normal_clause -> atom IMPLIES body DOT .)
    IMPLIES         reduce using rule 57 (normal_clause -> atom IMPLIES body DOT .)
    PREDICATE       reduce using rule 57 (normal_clause -> atom IMPLIES body DOT .)
    LOWER           reduce using rule 57 (normal_clause -> atom IMPLIES body DOT .)
    $end            reduce using rule 57 (normal_clause -> atom IMPLIES body DOT .)


state 89

    (58) normal_clause -> zero_predicate IMPLIES body DOT .

    EXAMPLE_KEY     reduce using rule 58 (normal_clause -> zero_predicate IMPLIES body DOT .)
    MODEB_KEY       reduce using rule 58 (normal_clause -> zero_predicate IMPLIES body DOT .)
    MODEH_KEY       reduce using rule 58 (normal_clause -> zero_predicate IMPLIES body DOT .)
    IMPLIES         reduce using rule 58 (normal_clause -> zero_predicate IMPLIES body DOT .)
    PREDICATE       reduce using rule 58 (normal_clause -> zero_predicate IMPLIES body DOT .)
    LOWER           reduce using rule 58 (normal_clause -> zero_predicate IMPLIES body DOT .)
    $end            reduce using rule 58 (normal_clause -> zero_predicate IMPLIES body DOT .)


state 90

    (44) modeb -> MODEB_KEY schema bias DOT .

    EXAMPLE_KEY     reduce using rule 44 (modeb -> MODEB_KEY schema bias DOT .)
    MODEB_KEY       reduce using rule 44 (modeb -> MODEB_KEY schema bias DOT .)
    MODEH_KEY       reduce using rule 44 (modeb -> MODEB_KEY schema bias DOT .)
    IMPLIES         reduce using rule 44 (modeb -> MODEB_KEY schema bias DOT .)
    PREDICATE       reduce using rule 44 (modeb -> MODEB_KEY schema bias DOT .)
    LOWER           reduce using rule 44 (modeb -> MODEB_KEY schema bias DOT .)
    $end            reduce using rule 44 (modeb -> MODEB_KEY schema bias DOT .)


state 91

    (43) modeb -> MODEB_KEY NOT schema DOT .

    EXAMPLE_KEY     reduce using rule 43 (modeb -> MODEB_KEY NOT schema DOT .)
    MODEB_KEY       reduce using rule 43 (modeb -> MODEB_KEY NOT schema DOT .)
    MODEH_KEY       reduce using rule 43 (modeb -> MODEB_KEY NOT schema DOT .)
    IMPLIES         reduce using rule 43 (modeb -> MODEB_KEY NOT schema DOT .)
    PREDICATE       reduce using rule 43 (modeb -> MODEB_KEY NOT schema DOT .)
    LOWER           reduce using rule 43 (modeb -> MODEB_KEY NOT schema DOT .)
    $end            reduce using rule 43 (modeb -> MODEB_KEY NOT schema DOT .)


state 92

    (45) modeb -> MODEB_KEY NOT schema bias . DOT

    DOT             shift and go to state 111


state 93

    (47) modeb -> MODEB_KEY NOT zero_predicate DOT .

    EXAMPLE_KEY     reduce using rule 47 (modeb -> MODEB_KEY NOT zero_predicate DOT .)
    MODEB_KEY       reduce using rule 47 (modeb -> MODEB_KEY NOT zero_predicate DOT .)
    MODEH_KEY       reduce using rule 47 (modeb -> MODEB_KEY NOT zero_predicate DOT .)
    IMPLIES         reduce using rule 47 (modeb -> MODEB_KEY NOT zero_predicate DOT .)
    PREDICATE       reduce using rule 47 (modeb -> MODEB_KEY NOT zero_predicate DOT .)
    LOWER           reduce using rule 47 (modeb -> MODEB_KEY NOT zero_predicate DOT .)
    $end            reduce using rule 47 (modeb -> MODEB_KEY NOT zero_predicate DOT .)


state 94

    (49) modeb -> MODEB_KEY NOT zero_predicate bias . DOT

    DOT             shift and go to state 112


state 95

    (48) modeb -> MODEB_KEY zero_predicate bias DOT .

    EXAMPLE_KEY     reduce using rule 48 (modeb -> MODEB_KEY zero_predicate bias DOT .)
    MODEB_KEY       reduce using rule 48 (modeb -> MODEB_KEY zero_predicate bias DOT .)
    MODEH_KEY       reduce using rule 48 (modeb -> MODEB_KEY zero_predicate bias DOT .)
    IMPLIES         reduce using rule 48 (modeb -> MODEB_KEY zero_predicate bias DOT .)
    PREDICATE       reduce using rule 48 (modeb -> MODEB_KEY zero_predicate bias DOT .)
    LOWER           reduce using rule 48 (modeb -> MODEB_KEY zero_predicate bias DOT .)
    $end            reduce using rule 48 (modeb -> MODEB_KEY zero_predicate bias DOT .)


state 96

    (14) schema -> PREDICATE LPAREN schema_terms . RPAREN

    RPAREN          shift and go to state 113


state 97

    (15) schema_terms -> MARKER . term
    (16) schema_terms -> MARKER . term COMMA schema_terms
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    term                           shift and go to state 114

state 98

    (17) schema_terms -> schema .
    (18) schema_terms -> schema . COMMA schema_terms

    RPAREN          reduce using rule 17 (schema_terms -> schema .)
    COMMA           shift and go to state 115


state 99

    (39) modeh -> MODEH_KEY schema bias DOT .

    EXAMPLE_KEY     reduce using rule 39 (modeh -> MODEH_KEY schema bias DOT .)
    MODEB_KEY       reduce using rule 39 (modeh -> MODEH_KEY schema bias DOT .)
    MODEH_KEY       reduce using rule 39 (modeh -> MODEH_KEY schema bias DOT .)
    IMPLIES         reduce using rule 39 (modeh -> MODEH_KEY schema bias DOT .)
    PREDICATE       reduce using rule 39 (modeh -> MODEH_KEY schema bias DOT .)
    LOWER           reduce using rule 39 (modeh -> MODEH_KEY schema bias DOT .)
    $end            reduce using rule 39 (modeh -> MODEH_KEY schema bias DOT .)


state 100

    (41) modeh -> MODEH_KEY zero_predicate bias DOT .

    EXAMPLE_KEY     reduce using rule 41 (modeh -> MODEH_KEY zero_predicate bias DOT .)
    MODEB_KEY       reduce using rule 41 (modeh -> MODEH_KEY zero_predicate bias DOT .)
    MODEH_KEY       reduce using rule 41 (modeh -> MODEH_KEY zero_predicate bias DOT .)
    IMPLIES         reduce using rule 41 (modeh -> MODEH_KEY zero_predicate bias DOT .)
    PREDICATE       reduce using rule 41 (modeh -> MODEH_KEY zero_predicate bias DOT .)
    LOWER           reduce using rule 41 (modeh -> MODEH_KEY zero_predicate bias DOT .)
    $end            reduce using rule 41 (modeh -> MODEH_KEY zero_predicate bias DOT .)


state 101

    (59) body -> literal COMMA body .

    DOT             reduce using rule 59 (body -> literal COMMA body .)


state 102

    (64) literal -> NOT term OPERATOR . term
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    term                           shift and go to state 116

state 103

    (63) literal -> term OPERATOR term .

    COMMA           reduce using rule 63 (literal -> term OPERATOR term .)
    DOT             reduce using rule 63 (literal -> term OPERATOR term .)


state 104

    (13) atom -> PREDICATE LPAREN terms RPAREN .

    DOT             reduce using rule 13 (atom -> PREDICATE LPAREN terms RPAREN .)
    IMPLIES         reduce using rule 13 (atom -> PREDICATE LPAREN terms RPAREN .)
    MAX             reduce using rule 13 (atom -> PREDICATE LPAREN terms RPAREN .)
    WEIGHT          reduce using rule 13 (atom -> PREDICATE LPAREN terms RPAREN .)
    PRIORITY        reduce using rule 13 (atom -> PREDICATE LPAREN terms RPAREN .)
    COMMA           reduce using rule 13 (atom -> PREDICATE LPAREN terms RPAREN .)
    RPAREN          reduce using rule 13 (atom -> PREDICATE LPAREN terms RPAREN .)


state 105

    (52) terms -> term COMMA . terms
    (50) terms -> . term
    (51) terms -> . atom
    (52) terms -> . term COMMA terms
    (53) terms -> . atom COMMA terms
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (13) atom -> . PREDICATE LPAREN terms RPAREN

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39
    PREDICATE       shift and go to state 15

    term                           shift and go to state 73
    terms                          shift and go to state 117
    atom                           shift and go to state 74

state 106

    (53) terms -> atom COMMA . terms
    (50) terms -> . term
    (51) terms -> . atom
    (52) terms -> . term COMMA terms
    (53) terms -> . atom COMMA terms
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER
    (13) atom -> . PREDICATE LPAREN terms RPAREN

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39
    PREDICATE       shift and go to state 15

    atom                           shift and go to state 74
    terms                          shift and go to state 118
    term                           shift and go to state 73

state 107

    (23) bias -> min_max_bias weight_bias priority_bias .

    DOT             reduce using rule 23 (bias -> min_max_bias weight_bias priority_bias .)


state 108

    (19) min_max_bias -> MAX term MIN . term
    (1) term -> . LOWER
    (2) term -> . NUMBER
    (3) term -> . UPPER

    LOWER           shift and go to state 75
    NUMBER          shift and go to state 38
    UPPER           shift and go to state 39

    term                           shift and go to state 119

state 109

    (33) example -> EXAMPLE_KEY NOT atom bias DOT .

    EXAMPLE_KEY     reduce using rule 33 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    MODEB_KEY       reduce using rule 33 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    MODEH_KEY       reduce using rule 33 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    IMPLIES         reduce using rule 33 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    PREDICATE       reduce using rule 33 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    LOWER           reduce using rule 33 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    $end            reduce using rule 33 (example -> EXAMPLE_KEY NOT atom bias DOT .)


state 110

    (37) example -> EXAMPLE_KEY NOT zero_predicate bias DOT .

    EXAMPLE_KEY     reduce using rule 37 (example -> EXAMPLE_KEY NOT zero_predicate bias DOT .)
    MODEB_KEY       reduce using rule 37 (example -> EXAMPLE_KEY NOT zero_predicate bias DOT .)
    MODEH_KEY       reduce using rule 37 (example -> EXAMPLE_KEY NOT zero_predicate bias DOT .)
    IMPLIES         reduce using rule 37 (example -> EXAMPLE_KEY NOT zero_predicate bias DOT .)
    PREDICATE       reduce using rule 37 (example -> EXAMPLE_KEY NOT zero_predicate bias DOT .)
    LOWER           reduce using rule 37 (example -> EXAMPLE_KEY NOT zero_predicate bias DOT .)
    $end            reduce using rule 37 (example -> EXAMPLE_KEY NOT zero_predicate bias DOT .)


state 111

    (45) modeb -> MODEB_KEY NOT schema bias DOT .

    EXAMPLE_KEY     reduce using rule 45 (modeb -> MODEB_KEY NOT schema bias DOT .)
    MODEB_KEY       reduce using rule 45 (modeb -> MODEB_KEY NOT schema bias DOT .)
    MODEH_KEY       reduce using rule 45 (modeb -> MODEB_KEY NOT schema bias DOT .)
    IMPLIES         reduce using rule 45 (modeb -> MODEB_KEY NOT schema bias DOT .)
    PREDICATE       reduce using rule 45 (modeb -> MODEB_KEY NOT schema bias DOT .)
    LOWER           reduce using rule 45 (modeb -> MODEB_KEY NOT schema bias DOT .)
    $end            reduce using rule 45 (modeb -> MODEB_KEY NOT schema bias DOT .)


state 112

    (49) modeb -> MODEB_KEY NOT zero_predicate bias DOT .

    EXAMPLE_KEY     reduce using rule 49 (modeb -> MODEB_KEY NOT zero_predicate bias DOT .)
    MODEB_KEY       reduce using rule 49 (modeb -> MODEB_KEY NOT zero_predicate bias DOT .)
    MODEH_KEY       reduce using rule 49 (modeb -> MODEB_KEY NOT zero_predicate bias DOT .)
    IMPLIES         reduce using rule 49 (modeb -> MODEB_KEY NOT zero_predicate bias DOT .)
    PREDICATE       reduce using rule 49 (modeb -> MODEB_KEY NOT zero_predicate bias DOT .)
    LOWER           reduce using rule 49 (modeb -> MODEB_KEY NOT zero_predicate bias DOT .)
    $end            reduce using rule 49 (modeb -> MODEB_KEY NOT zero_predicate bias DOT .)


state 113

    (14) schema -> PREDICATE LPAREN schema_terms RPAREN .

    DOT             reduce using rule 14 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    MAX             reduce using rule 14 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    WEIGHT          reduce using rule 14 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    PRIORITY        reduce using rule 14 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    COMMA           reduce using rule 14 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    RPAREN          reduce using rule 14 (schema -> PREDICATE LPAREN schema_terms RPAREN .)


state 114

    (15) schema_terms -> MARKER term .
    (16) schema_terms -> MARKER term . COMMA schema_terms

    RPAREN          reduce using rule 15 (schema_terms -> MARKER term .)
    COMMA           shift and go to state 120


state 115

    (18) schema_terms -> schema COMMA . schema_terms
    (15) schema_terms -> . MARKER term
    (16) schema_terms -> . MARKER term COMMA schema_terms
    (17) schema_terms -> . schema
    (18) schema_terms -> . schema COMMA schema_terms
    (14) schema -> . PREDICATE LPAREN schema_terms RPAREN

    MARKER          shift and go to state 97
    PREDICATE       shift and go to state 28

    schema                         shift and go to state 98
    schema_terms                   shift and go to state 121

state 116

    (64) literal -> NOT term OPERATOR term .

    COMMA           reduce using rule 64 (literal -> NOT term OPERATOR term .)
    DOT             reduce using rule 64 (literal -> NOT term OPERATOR term .)


state 117

    (52) terms -> term COMMA terms .

    RPAREN          reduce using rule 52 (terms -> term COMMA terms .)


state 118

    (53) terms -> atom COMMA terms .

    RPAREN          reduce using rule 53 (terms -> atom COMMA terms .)


state 119

    (19) min_max_bias -> MAX term MIN term .

    WEIGHT          reduce using rule 19 (min_max_bias -> MAX term MIN term .)
    PRIORITY        reduce using rule 19 (min_max_bias -> MAX term MIN term .)
    DOT             reduce using rule 19 (min_max_bias -> MAX term MIN term .)


state 120

    (16) schema_terms -> MARKER term COMMA . schema_terms
    (15) schema_terms -> . MARKER term
    (16) schema_terms -> . MARKER term COMMA schema_terms
    (17) schema_terms -> . schema
    (18) schema_terms -> . schema COMMA schema_terms
    (14) schema -> . PREDICATE LPAREN schema_terms RPAREN

    MARKER          shift and go to state 97
    PREDICATE       shift and go to state 28

    schema_terms                   shift and go to state 122
    schema                         shift and go to state 98

state 121

    (18) schema_terms -> schema COMMA schema_terms .

    RPAREN          reduce using rule 18 (schema_terms -> schema COMMA schema_terms .)


state 122

    (16) schema_terms -> MARKER term COMMA schema_terms .

    RPAREN          reduce using rule 16 (schema_terms -> MARKER term COMMA schema_terms .)

