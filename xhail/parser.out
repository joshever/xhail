Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program clause
Rule 2     program -> clause
Rule 3     clause -> example
Rule 4     clause -> modeb
Rule 5     clause -> modeh
Rule 6     clause -> fact
Rule 7     clause -> normal_clause
Rule 8     clause -> constraint
Rule 9     atom -> PREDICATE LPAREN terms RPAREN
Rule 10    schema -> PREDICATE LPAREN schema_terms RPAREN
Rule 11    schema_terms -> MARKER TERM
Rule 12    schema_terms -> MARKER TERM COMMA schema_terms
Rule 13    schema_terms -> schema
Rule 14    schema_terms -> schema COMMA schema_terms
Rule 15    example -> EXAMPLE_KEY atom DOT
Rule 16    example -> EXAMPLE_KEY NOT atom DOT
Rule 17    modeh -> MODEH_KEY schema DOT
Rule 18    modeb -> MODEB_KEY schema DOT
Rule 19    modeb -> MODEB_KEY NOT schema DOT
Rule 20    terms -> TERM
Rule 21    terms -> atom
Rule 22    terms -> TERM COMMA terms
Rule 23    terms -> atom COMMA terms
Rule 24    fact -> atom DOT
Rule 25    constraint -> NOT body DOT
Rule 26    normal_clause -> atom IMPLIES body DOT
Rule 27    body -> literal COMMA body
Rule 28    body -> literal
Rule 29    literal -> NOT atom
Rule 30    literal -> atom

Terminals, with rules where they appear

COMMA                : 12 14 22 23 27
DOT                  : 15 16 17 18 19 24 25 26
EXAMPLE_KEY          : 15 16
IMPLIES              : 26
LPAREN               : 9 10
MARKER               : 11 12
MODEB_KEY            : 18 19
MODEH_KEY            : 17
NOT                  : 16 19 25 29
PREDICATE            : 9 10
RPAREN               : 9 10
TERM                 : 11 12 20 22
error                : 

Nonterminals, with rules where they appear

atom                 : 15 16 21 23 24 26 29 30
body                 : 25 26 27
clause               : 1 2
constraint           : 8
example              : 3
fact                 : 6
literal              : 27 28
modeb                : 4
modeh                : 5
normal_clause        : 7
program              : 1 0
schema               : 13 14 17 18 19
schema_terms         : 10 12 14
terms                : 9 22 23

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program clause
    (2) program -> . clause
    (3) clause -> . example
    (4) clause -> . modeb
    (5) clause -> . modeh
    (6) clause -> . fact
    (7) clause -> . normal_clause
    (8) clause -> . constraint
    (15) example -> . EXAMPLE_KEY atom DOT
    (16) example -> . EXAMPLE_KEY NOT atom DOT
    (18) modeb -> . MODEB_KEY schema DOT
    (19) modeb -> . MODEB_KEY NOT schema DOT
    (17) modeh -> . MODEH_KEY schema DOT
    (24) fact -> . atom DOT
    (26) normal_clause -> . atom IMPLIES body DOT
    (25) constraint -> . NOT body DOT
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    EXAMPLE_KEY     shift and go to state 9
    MODEB_KEY       shift and go to state 12
    MODEH_KEY       shift and go to state 13
    NOT             shift and go to state 11
    PREDICATE       shift and go to state 14

    program                        shift and go to state 1
    clause                         shift and go to state 2
    example                        shift and go to state 3
    modeb                          shift and go to state 4
    modeh                          shift and go to state 5
    fact                           shift and go to state 6
    normal_clause                  shift and go to state 7
    constraint                     shift and go to state 8
    atom                           shift and go to state 10

state 1

    (0) S' -> program .
    (1) program -> program . clause
    (3) clause -> . example
    (4) clause -> . modeb
    (5) clause -> . modeh
    (6) clause -> . fact
    (7) clause -> . normal_clause
    (8) clause -> . constraint
    (15) example -> . EXAMPLE_KEY atom DOT
    (16) example -> . EXAMPLE_KEY NOT atom DOT
    (18) modeb -> . MODEB_KEY schema DOT
    (19) modeb -> . MODEB_KEY NOT schema DOT
    (17) modeh -> . MODEH_KEY schema DOT
    (24) fact -> . atom DOT
    (26) normal_clause -> . atom IMPLIES body DOT
    (25) constraint -> . NOT body DOT
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    EXAMPLE_KEY     shift and go to state 9
    MODEB_KEY       shift and go to state 12
    MODEH_KEY       shift and go to state 13
    NOT             shift and go to state 11
    PREDICATE       shift and go to state 14

    clause                         shift and go to state 15
    example                        shift and go to state 3
    modeb                          shift and go to state 4
    modeh                          shift and go to state 5
    fact                           shift and go to state 6
    normal_clause                  shift and go to state 7
    constraint                     shift and go to state 8
    atom                           shift and go to state 10

state 2

    (2) program -> clause .

    EXAMPLE_KEY     reduce using rule 2 (program -> clause .)
    MODEB_KEY       reduce using rule 2 (program -> clause .)
    MODEH_KEY       reduce using rule 2 (program -> clause .)
    NOT             reduce using rule 2 (program -> clause .)
    PREDICATE       reduce using rule 2 (program -> clause .)
    $end            reduce using rule 2 (program -> clause .)


state 3

    (3) clause -> example .

    EXAMPLE_KEY     reduce using rule 3 (clause -> example .)
    MODEB_KEY       reduce using rule 3 (clause -> example .)
    MODEH_KEY       reduce using rule 3 (clause -> example .)
    NOT             reduce using rule 3 (clause -> example .)
    PREDICATE       reduce using rule 3 (clause -> example .)
    $end            reduce using rule 3 (clause -> example .)


state 4

    (4) clause -> modeb .

    EXAMPLE_KEY     reduce using rule 4 (clause -> modeb .)
    MODEB_KEY       reduce using rule 4 (clause -> modeb .)
    MODEH_KEY       reduce using rule 4 (clause -> modeb .)
    NOT             reduce using rule 4 (clause -> modeb .)
    PREDICATE       reduce using rule 4 (clause -> modeb .)
    $end            reduce using rule 4 (clause -> modeb .)


state 5

    (5) clause -> modeh .

    EXAMPLE_KEY     reduce using rule 5 (clause -> modeh .)
    MODEB_KEY       reduce using rule 5 (clause -> modeh .)
    MODEH_KEY       reduce using rule 5 (clause -> modeh .)
    NOT             reduce using rule 5 (clause -> modeh .)
    PREDICATE       reduce using rule 5 (clause -> modeh .)
    $end            reduce using rule 5 (clause -> modeh .)


state 6

    (6) clause -> fact .

    EXAMPLE_KEY     reduce using rule 6 (clause -> fact .)
    MODEB_KEY       reduce using rule 6 (clause -> fact .)
    MODEH_KEY       reduce using rule 6 (clause -> fact .)
    NOT             reduce using rule 6 (clause -> fact .)
    PREDICATE       reduce using rule 6 (clause -> fact .)
    $end            reduce using rule 6 (clause -> fact .)


state 7

    (7) clause -> normal_clause .

    EXAMPLE_KEY     reduce using rule 7 (clause -> normal_clause .)
    MODEB_KEY       reduce using rule 7 (clause -> normal_clause .)
    MODEH_KEY       reduce using rule 7 (clause -> normal_clause .)
    NOT             reduce using rule 7 (clause -> normal_clause .)
    PREDICATE       reduce using rule 7 (clause -> normal_clause .)
    $end            reduce using rule 7 (clause -> normal_clause .)


state 8

    (8) clause -> constraint .

    EXAMPLE_KEY     reduce using rule 8 (clause -> constraint .)
    MODEB_KEY       reduce using rule 8 (clause -> constraint .)
    MODEH_KEY       reduce using rule 8 (clause -> constraint .)
    NOT             reduce using rule 8 (clause -> constraint .)
    PREDICATE       reduce using rule 8 (clause -> constraint .)
    $end            reduce using rule 8 (clause -> constraint .)


state 9

    (15) example -> EXAMPLE_KEY . atom DOT
    (16) example -> EXAMPLE_KEY . NOT atom DOT
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    NOT             shift and go to state 17
    PREDICATE       shift and go to state 14

    atom                           shift and go to state 16

state 10

    (24) fact -> atom . DOT
    (26) normal_clause -> atom . IMPLIES body DOT

    DOT             shift and go to state 18
    IMPLIES         shift and go to state 19


state 11

    (25) constraint -> NOT . body DOT
    (27) body -> . literal COMMA body
    (28) body -> . literal
    (29) literal -> . NOT atom
    (30) literal -> . atom
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    NOT             shift and go to state 20
    PREDICATE       shift and go to state 14

    body                           shift and go to state 21
    literal                        shift and go to state 22
    atom                           shift and go to state 23

state 12

    (18) modeb -> MODEB_KEY . schema DOT
    (19) modeb -> MODEB_KEY . NOT schema DOT
    (10) schema -> . PREDICATE LPAREN schema_terms RPAREN

    NOT             shift and go to state 25
    PREDICATE       shift and go to state 26

    schema                         shift and go to state 24

state 13

    (17) modeh -> MODEH_KEY . schema DOT
    (10) schema -> . PREDICATE LPAREN schema_terms RPAREN

    PREDICATE       shift and go to state 26

    schema                         shift and go to state 27

state 14

    (9) atom -> PREDICATE . LPAREN terms RPAREN

    LPAREN          shift and go to state 28


state 15

    (1) program -> program clause .

    EXAMPLE_KEY     reduce using rule 1 (program -> program clause .)
    MODEB_KEY       reduce using rule 1 (program -> program clause .)
    MODEH_KEY       reduce using rule 1 (program -> program clause .)
    NOT             reduce using rule 1 (program -> program clause .)
    PREDICATE       reduce using rule 1 (program -> program clause .)
    $end            reduce using rule 1 (program -> program clause .)


state 16

    (15) example -> EXAMPLE_KEY atom . DOT

    DOT             shift and go to state 29


state 17

    (16) example -> EXAMPLE_KEY NOT . atom DOT
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    PREDICATE       shift and go to state 14

    atom                           shift and go to state 30

state 18

    (24) fact -> atom DOT .

    EXAMPLE_KEY     reduce using rule 24 (fact -> atom DOT .)
    MODEB_KEY       reduce using rule 24 (fact -> atom DOT .)
    MODEH_KEY       reduce using rule 24 (fact -> atom DOT .)
    NOT             reduce using rule 24 (fact -> atom DOT .)
    PREDICATE       reduce using rule 24 (fact -> atom DOT .)
    $end            reduce using rule 24 (fact -> atom DOT .)


state 19

    (26) normal_clause -> atom IMPLIES . body DOT
    (27) body -> . literal COMMA body
    (28) body -> . literal
    (29) literal -> . NOT atom
    (30) literal -> . atom
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    NOT             shift and go to state 20
    PREDICATE       shift and go to state 14

    atom                           shift and go to state 23
    body                           shift and go to state 31
    literal                        shift and go to state 22

state 20

    (29) literal -> NOT . atom
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    PREDICATE       shift and go to state 14

    atom                           shift and go to state 32

state 21

    (25) constraint -> NOT body . DOT

    DOT             shift and go to state 33


state 22

    (27) body -> literal . COMMA body
    (28) body -> literal .

    COMMA           shift and go to state 34
    DOT             reduce using rule 28 (body -> literal .)


state 23

    (30) literal -> atom .

    COMMA           reduce using rule 30 (literal -> atom .)
    DOT             reduce using rule 30 (literal -> atom .)


state 24

    (18) modeb -> MODEB_KEY schema . DOT

    DOT             shift and go to state 35


state 25

    (19) modeb -> MODEB_KEY NOT . schema DOT
    (10) schema -> . PREDICATE LPAREN schema_terms RPAREN

    PREDICATE       shift and go to state 26

    schema                         shift and go to state 36

state 26

    (10) schema -> PREDICATE . LPAREN schema_terms RPAREN

    LPAREN          shift and go to state 37


state 27

    (17) modeh -> MODEH_KEY schema . DOT

    DOT             shift and go to state 38


state 28

    (9) atom -> PREDICATE LPAREN . terms RPAREN
    (20) terms -> . TERM
    (21) terms -> . atom
    (22) terms -> . TERM COMMA terms
    (23) terms -> . atom COMMA terms
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    TERM            shift and go to state 40
    PREDICATE       shift and go to state 14

    terms                          shift and go to state 39
    atom                           shift and go to state 41

state 29

    (15) example -> EXAMPLE_KEY atom DOT .

    EXAMPLE_KEY     reduce using rule 15 (example -> EXAMPLE_KEY atom DOT .)
    MODEB_KEY       reduce using rule 15 (example -> EXAMPLE_KEY atom DOT .)
    MODEH_KEY       reduce using rule 15 (example -> EXAMPLE_KEY atom DOT .)
    NOT             reduce using rule 15 (example -> EXAMPLE_KEY atom DOT .)
    PREDICATE       reduce using rule 15 (example -> EXAMPLE_KEY atom DOT .)
    $end            reduce using rule 15 (example -> EXAMPLE_KEY atom DOT .)


state 30

    (16) example -> EXAMPLE_KEY NOT atom . DOT

    DOT             shift and go to state 42


state 31

    (26) normal_clause -> atom IMPLIES body . DOT

    DOT             shift and go to state 43


state 32

    (29) literal -> NOT atom .

    COMMA           reduce using rule 29 (literal -> NOT atom .)
    DOT             reduce using rule 29 (literal -> NOT atom .)


state 33

    (25) constraint -> NOT body DOT .

    EXAMPLE_KEY     reduce using rule 25 (constraint -> NOT body DOT .)
    MODEB_KEY       reduce using rule 25 (constraint -> NOT body DOT .)
    MODEH_KEY       reduce using rule 25 (constraint -> NOT body DOT .)
    NOT             reduce using rule 25 (constraint -> NOT body DOT .)
    PREDICATE       reduce using rule 25 (constraint -> NOT body DOT .)
    $end            reduce using rule 25 (constraint -> NOT body DOT .)


state 34

    (27) body -> literal COMMA . body
    (27) body -> . literal COMMA body
    (28) body -> . literal
    (29) literal -> . NOT atom
    (30) literal -> . atom
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    NOT             shift and go to state 20
    PREDICATE       shift and go to state 14

    literal                        shift and go to state 22
    body                           shift and go to state 44
    atom                           shift and go to state 23

state 35

    (18) modeb -> MODEB_KEY schema DOT .

    EXAMPLE_KEY     reduce using rule 18 (modeb -> MODEB_KEY schema DOT .)
    MODEB_KEY       reduce using rule 18 (modeb -> MODEB_KEY schema DOT .)
    MODEH_KEY       reduce using rule 18 (modeb -> MODEB_KEY schema DOT .)
    NOT             reduce using rule 18 (modeb -> MODEB_KEY schema DOT .)
    PREDICATE       reduce using rule 18 (modeb -> MODEB_KEY schema DOT .)
    $end            reduce using rule 18 (modeb -> MODEB_KEY schema DOT .)


state 36

    (19) modeb -> MODEB_KEY NOT schema . DOT

    DOT             shift and go to state 45


state 37

    (10) schema -> PREDICATE LPAREN . schema_terms RPAREN
    (11) schema_terms -> . MARKER TERM
    (12) schema_terms -> . MARKER TERM COMMA schema_terms
    (13) schema_terms -> . schema
    (14) schema_terms -> . schema COMMA schema_terms
    (10) schema -> . PREDICATE LPAREN schema_terms RPAREN

    MARKER          shift and go to state 47
    PREDICATE       shift and go to state 26

    schema_terms                   shift and go to state 46
    schema                         shift and go to state 48

state 38

    (17) modeh -> MODEH_KEY schema DOT .

    EXAMPLE_KEY     reduce using rule 17 (modeh -> MODEH_KEY schema DOT .)
    MODEB_KEY       reduce using rule 17 (modeh -> MODEH_KEY schema DOT .)
    MODEH_KEY       reduce using rule 17 (modeh -> MODEH_KEY schema DOT .)
    NOT             reduce using rule 17 (modeh -> MODEH_KEY schema DOT .)
    PREDICATE       reduce using rule 17 (modeh -> MODEH_KEY schema DOT .)
    $end            reduce using rule 17 (modeh -> MODEH_KEY schema DOT .)


state 39

    (9) atom -> PREDICATE LPAREN terms . RPAREN

    RPAREN          shift and go to state 49


state 40

    (20) terms -> TERM .
    (22) terms -> TERM . COMMA terms

    RPAREN          reduce using rule 20 (terms -> TERM .)
    COMMA           shift and go to state 50


state 41

    (21) terms -> atom .
    (23) terms -> atom . COMMA terms

    RPAREN          reduce using rule 21 (terms -> atom .)
    COMMA           shift and go to state 51


state 42

    (16) example -> EXAMPLE_KEY NOT atom DOT .

    EXAMPLE_KEY     reduce using rule 16 (example -> EXAMPLE_KEY NOT atom DOT .)
    MODEB_KEY       reduce using rule 16 (example -> EXAMPLE_KEY NOT atom DOT .)
    MODEH_KEY       reduce using rule 16 (example -> EXAMPLE_KEY NOT atom DOT .)
    NOT             reduce using rule 16 (example -> EXAMPLE_KEY NOT atom DOT .)
    PREDICATE       reduce using rule 16 (example -> EXAMPLE_KEY NOT atom DOT .)
    $end            reduce using rule 16 (example -> EXAMPLE_KEY NOT atom DOT .)


state 43

    (26) normal_clause -> atom IMPLIES body DOT .

    EXAMPLE_KEY     reduce using rule 26 (normal_clause -> atom IMPLIES body DOT .)
    MODEB_KEY       reduce using rule 26 (normal_clause -> atom IMPLIES body DOT .)
    MODEH_KEY       reduce using rule 26 (normal_clause -> atom IMPLIES body DOT .)
    NOT             reduce using rule 26 (normal_clause -> atom IMPLIES body DOT .)
    PREDICATE       reduce using rule 26 (normal_clause -> atom IMPLIES body DOT .)
    $end            reduce using rule 26 (normal_clause -> atom IMPLIES body DOT .)


state 44

    (27) body -> literal COMMA body .

    DOT             reduce using rule 27 (body -> literal COMMA body .)


state 45

    (19) modeb -> MODEB_KEY NOT schema DOT .

    EXAMPLE_KEY     reduce using rule 19 (modeb -> MODEB_KEY NOT schema DOT .)
    MODEB_KEY       reduce using rule 19 (modeb -> MODEB_KEY NOT schema DOT .)
    MODEH_KEY       reduce using rule 19 (modeb -> MODEB_KEY NOT schema DOT .)
    NOT             reduce using rule 19 (modeb -> MODEB_KEY NOT schema DOT .)
    PREDICATE       reduce using rule 19 (modeb -> MODEB_KEY NOT schema DOT .)
    $end            reduce using rule 19 (modeb -> MODEB_KEY NOT schema DOT .)


state 46

    (10) schema -> PREDICATE LPAREN schema_terms . RPAREN

    RPAREN          shift and go to state 52


state 47

    (11) schema_terms -> MARKER . TERM
    (12) schema_terms -> MARKER . TERM COMMA schema_terms

    TERM            shift and go to state 53


state 48

    (13) schema_terms -> schema .
    (14) schema_terms -> schema . COMMA schema_terms

    RPAREN          reduce using rule 13 (schema_terms -> schema .)
    COMMA           shift and go to state 54


state 49

    (9) atom -> PREDICATE LPAREN terms RPAREN .

    DOT             reduce using rule 9 (atom -> PREDICATE LPAREN terms RPAREN .)
    IMPLIES         reduce using rule 9 (atom -> PREDICATE LPAREN terms RPAREN .)
    COMMA           reduce using rule 9 (atom -> PREDICATE LPAREN terms RPAREN .)
    RPAREN          reduce using rule 9 (atom -> PREDICATE LPAREN terms RPAREN .)


state 50

    (22) terms -> TERM COMMA . terms
    (20) terms -> . TERM
    (21) terms -> . atom
    (22) terms -> . TERM COMMA terms
    (23) terms -> . atom COMMA terms
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    TERM            shift and go to state 40
    PREDICATE       shift and go to state 14

    terms                          shift and go to state 55
    atom                           shift and go to state 41

state 51

    (23) terms -> atom COMMA . terms
    (20) terms -> . TERM
    (21) terms -> . atom
    (22) terms -> . TERM COMMA terms
    (23) terms -> . atom COMMA terms
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    TERM            shift and go to state 40
    PREDICATE       shift and go to state 14

    atom                           shift and go to state 41
    terms                          shift and go to state 56

state 52

    (10) schema -> PREDICATE LPAREN schema_terms RPAREN .

    DOT             reduce using rule 10 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    COMMA           reduce using rule 10 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    RPAREN          reduce using rule 10 (schema -> PREDICATE LPAREN schema_terms RPAREN .)


state 53

    (11) schema_terms -> MARKER TERM .
    (12) schema_terms -> MARKER TERM . COMMA schema_terms

    RPAREN          reduce using rule 11 (schema_terms -> MARKER TERM .)
    COMMA           shift and go to state 57


state 54

    (14) schema_terms -> schema COMMA . schema_terms
    (11) schema_terms -> . MARKER TERM
    (12) schema_terms -> . MARKER TERM COMMA schema_terms
    (13) schema_terms -> . schema
    (14) schema_terms -> . schema COMMA schema_terms
    (10) schema -> . PREDICATE LPAREN schema_terms RPAREN

    MARKER          shift and go to state 47
    PREDICATE       shift and go to state 26

    schema                         shift and go to state 48
    schema_terms                   shift and go to state 58

state 55

    (22) terms -> TERM COMMA terms .

    RPAREN          reduce using rule 22 (terms -> TERM COMMA terms .)


state 56

    (23) terms -> atom COMMA terms .

    RPAREN          reduce using rule 23 (terms -> atom COMMA terms .)


state 57

    (12) schema_terms -> MARKER TERM COMMA . schema_terms
    (11) schema_terms -> . MARKER TERM
    (12) schema_terms -> . MARKER TERM COMMA schema_terms
    (13) schema_terms -> . schema
    (14) schema_terms -> . schema COMMA schema_terms
    (10) schema -> . PREDICATE LPAREN schema_terms RPAREN

    MARKER          shift and go to state 47
    PREDICATE       shift and go to state 26

    schema_terms                   shift and go to state 59
    schema                         shift and go to state 48

state 58

    (14) schema_terms -> schema COMMA schema_terms .

    RPAREN          reduce using rule 14 (schema_terms -> schema COMMA schema_terms .)


state 59

    (12) schema_terms -> MARKER TERM COMMA schema_terms .

    RPAREN          reduce using rule 12 (schema_terms -> MARKER TERM COMMA schema_terms .)

