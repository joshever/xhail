Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program clause
Rule 2     program -> clause
Rule 3     clause -> example
Rule 4     clause -> modeb
Rule 5     clause -> modeh
Rule 6     clause -> fact
Rule 7     clause -> normal_clause
Rule 8     clause -> constraint
Rule 9     atom -> PREDICATE LPAREN terms RPAREN
Rule 10    schema -> PREDICATE LPAREN schema_terms RPAREN
Rule 11    schema_terms -> MARKER TERM
Rule 12    schema_terms -> MARKER TERM COMMA schema_terms
Rule 13    schema_terms -> schema
Rule 14    schema_terms -> schema COMMA schema_terms
Rule 15    min_max_bias -> MAX TERM MIN TERM
Rule 16    min_max_bias -> MAX TERM
Rule 17    priority_bias -> PRIORITY TERM
Rule 18    weight_bias -> WEIGHT TERM
Rule 19    bias -> min_max_bias weight_bias priority_bias
Rule 20    bias -> min_max_bias priority_bias
Rule 21    bias -> min_max_bias weight_bias
Rule 22    bias -> weight_bias priority_bias
Rule 23    bias -> weight_bias
Rule 24    bias -> priority_bias
Rule 25    bias -> min_max_bias
Rule 26    example -> EXAMPLE_KEY atom DOT
Rule 27    example -> EXAMPLE_KEY NOT atom DOT
Rule 28    example -> EXAMPLE_KEY atom bias DOT
Rule 29    example -> EXAMPLE_KEY NOT atom bias DOT
Rule 30    modeh -> MODEH_KEY schema DOT
Rule 31    modeh -> MODEH_KEY schema bias DOT
Rule 32    modeb -> MODEB_KEY schema DOT
Rule 33    modeb -> MODEB_KEY NOT schema DOT
Rule 34    modeb -> MODEB_KEY schema bias DOT
Rule 35    modeb -> MODEB_KEY NOT schema bias DOT
Rule 36    terms -> TERM
Rule 37    terms -> atom
Rule 38    terms -> TERM COMMA terms
Rule 39    terms -> atom COMMA terms
Rule 40    fact -> atom DOT
Rule 41    constraint -> NOT body DOT
Rule 42    normal_clause -> atom IMPLIES body DOT
Rule 43    body -> literal COMMA body
Rule 44    body -> literal
Rule 45    literal -> NOT atom
Rule 46    literal -> atom
Rule 47    literal -> TERM OPERATOR TERM

Terminals, with rules where they appear

COMMA                : 12 14 38 39 43
DOT                  : 26 27 28 29 30 31 32 33 34 35 40 41 42
EXAMPLE_KEY          : 26 27 28 29
IMPLIES              : 42
LPAREN               : 9 10
MARKER               : 11 12
MAX                  : 15 16
MIN                  : 15
MODEB_KEY            : 32 33 34 35
MODEH_KEY            : 30 31
NOT                  : 27 29 33 35 41 45
OPERATOR             : 47
PREDICATE            : 9 10
PRIORITY             : 17
RPAREN               : 9 10
TERM                 : 11 12 15 15 16 17 18 36 38 47 47
WEIGHT               : 18
error                : 

Nonterminals, with rules where they appear

atom                 : 26 27 28 29 37 39 40 42 45 46
bias                 : 28 29 31 34 35
body                 : 41 42 43
clause               : 1 2
constraint           : 8
example              : 3
fact                 : 6
literal              : 43 44
min_max_bias         : 19 20 21 25
modeb                : 4
modeh                : 5
normal_clause        : 7
priority_bias        : 19 20 22 24
program              : 1 0
schema               : 13 14 30 31 32 33 34 35
schema_terms         : 10 12 14
terms                : 9 38 39
weight_bias          : 19 21 22 23

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program clause
    (2) program -> . clause
    (3) clause -> . example
    (4) clause -> . modeb
    (5) clause -> . modeh
    (6) clause -> . fact
    (7) clause -> . normal_clause
    (8) clause -> . constraint
    (26) example -> . EXAMPLE_KEY atom DOT
    (27) example -> . EXAMPLE_KEY NOT atom DOT
    (28) example -> . EXAMPLE_KEY atom bias DOT
    (29) example -> . EXAMPLE_KEY NOT atom bias DOT
    (32) modeb -> . MODEB_KEY schema DOT
    (33) modeb -> . MODEB_KEY NOT schema DOT
    (34) modeb -> . MODEB_KEY schema bias DOT
    (35) modeb -> . MODEB_KEY NOT schema bias DOT
    (30) modeh -> . MODEH_KEY schema DOT
    (31) modeh -> . MODEH_KEY schema bias DOT
    (40) fact -> . atom DOT
    (42) normal_clause -> . atom IMPLIES body DOT
    (41) constraint -> . NOT body DOT
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    EXAMPLE_KEY     shift and go to state 9
    MODEB_KEY       shift and go to state 12
    MODEH_KEY       shift and go to state 13
    NOT             shift and go to state 11
    PREDICATE       shift and go to state 14

    program                        shift and go to state 1
    clause                         shift and go to state 2
    example                        shift and go to state 3
    modeb                          shift and go to state 4
    modeh                          shift and go to state 5
    fact                           shift and go to state 6
    normal_clause                  shift and go to state 7
    constraint                     shift and go to state 8
    atom                           shift and go to state 10

state 1

    (0) S' -> program .
    (1) program -> program . clause
    (3) clause -> . example
    (4) clause -> . modeb
    (5) clause -> . modeh
    (6) clause -> . fact
    (7) clause -> . normal_clause
    (8) clause -> . constraint
    (26) example -> . EXAMPLE_KEY atom DOT
    (27) example -> . EXAMPLE_KEY NOT atom DOT
    (28) example -> . EXAMPLE_KEY atom bias DOT
    (29) example -> . EXAMPLE_KEY NOT atom bias DOT
    (32) modeb -> . MODEB_KEY schema DOT
    (33) modeb -> . MODEB_KEY NOT schema DOT
    (34) modeb -> . MODEB_KEY schema bias DOT
    (35) modeb -> . MODEB_KEY NOT schema bias DOT
    (30) modeh -> . MODEH_KEY schema DOT
    (31) modeh -> . MODEH_KEY schema bias DOT
    (40) fact -> . atom DOT
    (42) normal_clause -> . atom IMPLIES body DOT
    (41) constraint -> . NOT body DOT
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    EXAMPLE_KEY     shift and go to state 9
    MODEB_KEY       shift and go to state 12
    MODEH_KEY       shift and go to state 13
    NOT             shift and go to state 11
    PREDICATE       shift and go to state 14

    clause                         shift and go to state 15
    example                        shift and go to state 3
    modeb                          shift and go to state 4
    modeh                          shift and go to state 5
    fact                           shift and go to state 6
    normal_clause                  shift and go to state 7
    constraint                     shift and go to state 8
    atom                           shift and go to state 10

state 2

    (2) program -> clause .

    EXAMPLE_KEY     reduce using rule 2 (program -> clause .)
    MODEB_KEY       reduce using rule 2 (program -> clause .)
    MODEH_KEY       reduce using rule 2 (program -> clause .)
    NOT             reduce using rule 2 (program -> clause .)
    PREDICATE       reduce using rule 2 (program -> clause .)
    $end            reduce using rule 2 (program -> clause .)


state 3

    (3) clause -> example .

    EXAMPLE_KEY     reduce using rule 3 (clause -> example .)
    MODEB_KEY       reduce using rule 3 (clause -> example .)
    MODEH_KEY       reduce using rule 3 (clause -> example .)
    NOT             reduce using rule 3 (clause -> example .)
    PREDICATE       reduce using rule 3 (clause -> example .)
    $end            reduce using rule 3 (clause -> example .)


state 4

    (4) clause -> modeb .

    EXAMPLE_KEY     reduce using rule 4 (clause -> modeb .)
    MODEB_KEY       reduce using rule 4 (clause -> modeb .)
    MODEH_KEY       reduce using rule 4 (clause -> modeb .)
    NOT             reduce using rule 4 (clause -> modeb .)
    PREDICATE       reduce using rule 4 (clause -> modeb .)
    $end            reduce using rule 4 (clause -> modeb .)


state 5

    (5) clause -> modeh .

    EXAMPLE_KEY     reduce using rule 5 (clause -> modeh .)
    MODEB_KEY       reduce using rule 5 (clause -> modeh .)
    MODEH_KEY       reduce using rule 5 (clause -> modeh .)
    NOT             reduce using rule 5 (clause -> modeh .)
    PREDICATE       reduce using rule 5 (clause -> modeh .)
    $end            reduce using rule 5 (clause -> modeh .)


state 6

    (6) clause -> fact .

    EXAMPLE_KEY     reduce using rule 6 (clause -> fact .)
    MODEB_KEY       reduce using rule 6 (clause -> fact .)
    MODEH_KEY       reduce using rule 6 (clause -> fact .)
    NOT             reduce using rule 6 (clause -> fact .)
    PREDICATE       reduce using rule 6 (clause -> fact .)
    $end            reduce using rule 6 (clause -> fact .)


state 7

    (7) clause -> normal_clause .

    EXAMPLE_KEY     reduce using rule 7 (clause -> normal_clause .)
    MODEB_KEY       reduce using rule 7 (clause -> normal_clause .)
    MODEH_KEY       reduce using rule 7 (clause -> normal_clause .)
    NOT             reduce using rule 7 (clause -> normal_clause .)
    PREDICATE       reduce using rule 7 (clause -> normal_clause .)
    $end            reduce using rule 7 (clause -> normal_clause .)


state 8

    (8) clause -> constraint .

    EXAMPLE_KEY     reduce using rule 8 (clause -> constraint .)
    MODEB_KEY       reduce using rule 8 (clause -> constraint .)
    MODEH_KEY       reduce using rule 8 (clause -> constraint .)
    NOT             reduce using rule 8 (clause -> constraint .)
    PREDICATE       reduce using rule 8 (clause -> constraint .)
    $end            reduce using rule 8 (clause -> constraint .)


state 9

    (26) example -> EXAMPLE_KEY . atom DOT
    (27) example -> EXAMPLE_KEY . NOT atom DOT
    (28) example -> EXAMPLE_KEY . atom bias DOT
    (29) example -> EXAMPLE_KEY . NOT atom bias DOT
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    NOT             shift and go to state 17
    PREDICATE       shift and go to state 14

    atom                           shift and go to state 16

state 10

    (40) fact -> atom . DOT
    (42) normal_clause -> atom . IMPLIES body DOT

    DOT             shift and go to state 18
    IMPLIES         shift and go to state 19


state 11

    (41) constraint -> NOT . body DOT
    (43) body -> . literal COMMA body
    (44) body -> . literal
    (45) literal -> . NOT atom
    (46) literal -> . atom
    (47) literal -> . TERM OPERATOR TERM
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    NOT             shift and go to state 20
    TERM            shift and go to state 24
    PREDICATE       shift and go to state 14

    body                           shift and go to state 21
    literal                        shift and go to state 22
    atom                           shift and go to state 23

state 12

    (32) modeb -> MODEB_KEY . schema DOT
    (33) modeb -> MODEB_KEY . NOT schema DOT
    (34) modeb -> MODEB_KEY . schema bias DOT
    (35) modeb -> MODEB_KEY . NOT schema bias DOT
    (10) schema -> . PREDICATE LPAREN schema_terms RPAREN

    NOT             shift and go to state 26
    PREDICATE       shift and go to state 27

    schema                         shift and go to state 25

state 13

    (30) modeh -> MODEH_KEY . schema DOT
    (31) modeh -> MODEH_KEY . schema bias DOT
    (10) schema -> . PREDICATE LPAREN schema_terms RPAREN

    PREDICATE       shift and go to state 27

    schema                         shift and go to state 28

state 14

    (9) atom -> PREDICATE . LPAREN terms RPAREN

    LPAREN          shift and go to state 29


state 15

    (1) program -> program clause .

    EXAMPLE_KEY     reduce using rule 1 (program -> program clause .)
    MODEB_KEY       reduce using rule 1 (program -> program clause .)
    MODEH_KEY       reduce using rule 1 (program -> program clause .)
    NOT             reduce using rule 1 (program -> program clause .)
    PREDICATE       reduce using rule 1 (program -> program clause .)
    $end            reduce using rule 1 (program -> program clause .)


state 16

    (26) example -> EXAMPLE_KEY atom . DOT
    (28) example -> EXAMPLE_KEY atom . bias DOT
    (19) bias -> . min_max_bias weight_bias priority_bias
    (20) bias -> . min_max_bias priority_bias
    (21) bias -> . min_max_bias weight_bias
    (22) bias -> . weight_bias priority_bias
    (23) bias -> . weight_bias
    (24) bias -> . priority_bias
    (25) bias -> . min_max_bias
    (15) min_max_bias -> . MAX TERM MIN TERM
    (16) min_max_bias -> . MAX TERM
    (18) weight_bias -> . WEIGHT TERM
    (17) priority_bias -> . PRIORITY TERM

    DOT             shift and go to state 30
    MAX             shift and go to state 35
    WEIGHT          shift and go to state 36
    PRIORITY        shift and go to state 37

    bias                           shift and go to state 31
    min_max_bias                   shift and go to state 32
    weight_bias                    shift and go to state 33
    priority_bias                  shift and go to state 34

state 17

    (27) example -> EXAMPLE_KEY NOT . atom DOT
    (29) example -> EXAMPLE_KEY NOT . atom bias DOT
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    PREDICATE       shift and go to state 14

    atom                           shift and go to state 38

state 18

    (40) fact -> atom DOT .

    EXAMPLE_KEY     reduce using rule 40 (fact -> atom DOT .)
    MODEB_KEY       reduce using rule 40 (fact -> atom DOT .)
    MODEH_KEY       reduce using rule 40 (fact -> atom DOT .)
    NOT             reduce using rule 40 (fact -> atom DOT .)
    PREDICATE       reduce using rule 40 (fact -> atom DOT .)
    $end            reduce using rule 40 (fact -> atom DOT .)


state 19

    (42) normal_clause -> atom IMPLIES . body DOT
    (43) body -> . literal COMMA body
    (44) body -> . literal
    (45) literal -> . NOT atom
    (46) literal -> . atom
    (47) literal -> . TERM OPERATOR TERM
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    NOT             shift and go to state 20
    TERM            shift and go to state 24
    PREDICATE       shift and go to state 14

    atom                           shift and go to state 23
    body                           shift and go to state 39
    literal                        shift and go to state 22

state 20

    (45) literal -> NOT . atom
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    PREDICATE       shift and go to state 14

    atom                           shift and go to state 40

state 21

    (41) constraint -> NOT body . DOT

    DOT             shift and go to state 41


state 22

    (43) body -> literal . COMMA body
    (44) body -> literal .

    COMMA           shift and go to state 42
    DOT             reduce using rule 44 (body -> literal .)


state 23

    (46) literal -> atom .

    COMMA           reduce using rule 46 (literal -> atom .)
    DOT             reduce using rule 46 (literal -> atom .)


state 24

    (47) literal -> TERM . OPERATOR TERM

    OPERATOR        shift and go to state 43


state 25

    (32) modeb -> MODEB_KEY schema . DOT
    (34) modeb -> MODEB_KEY schema . bias DOT
    (19) bias -> . min_max_bias weight_bias priority_bias
    (20) bias -> . min_max_bias priority_bias
    (21) bias -> . min_max_bias weight_bias
    (22) bias -> . weight_bias priority_bias
    (23) bias -> . weight_bias
    (24) bias -> . priority_bias
    (25) bias -> . min_max_bias
    (15) min_max_bias -> . MAX TERM MIN TERM
    (16) min_max_bias -> . MAX TERM
    (18) weight_bias -> . WEIGHT TERM
    (17) priority_bias -> . PRIORITY TERM

    DOT             shift and go to state 44
    MAX             shift and go to state 35
    WEIGHT          shift and go to state 36
    PRIORITY        shift and go to state 37

    bias                           shift and go to state 45
    min_max_bias                   shift and go to state 32
    weight_bias                    shift and go to state 33
    priority_bias                  shift and go to state 34

state 26

    (33) modeb -> MODEB_KEY NOT . schema DOT
    (35) modeb -> MODEB_KEY NOT . schema bias DOT
    (10) schema -> . PREDICATE LPAREN schema_terms RPAREN

    PREDICATE       shift and go to state 27

    schema                         shift and go to state 46

state 27

    (10) schema -> PREDICATE . LPAREN schema_terms RPAREN

    LPAREN          shift and go to state 47


state 28

    (30) modeh -> MODEH_KEY schema . DOT
    (31) modeh -> MODEH_KEY schema . bias DOT
    (19) bias -> . min_max_bias weight_bias priority_bias
    (20) bias -> . min_max_bias priority_bias
    (21) bias -> . min_max_bias weight_bias
    (22) bias -> . weight_bias priority_bias
    (23) bias -> . weight_bias
    (24) bias -> . priority_bias
    (25) bias -> . min_max_bias
    (15) min_max_bias -> . MAX TERM MIN TERM
    (16) min_max_bias -> . MAX TERM
    (18) weight_bias -> . WEIGHT TERM
    (17) priority_bias -> . PRIORITY TERM

    DOT             shift and go to state 48
    MAX             shift and go to state 35
    WEIGHT          shift and go to state 36
    PRIORITY        shift and go to state 37

    bias                           shift and go to state 49
    min_max_bias                   shift and go to state 32
    weight_bias                    shift and go to state 33
    priority_bias                  shift and go to state 34

state 29

    (9) atom -> PREDICATE LPAREN . terms RPAREN
    (36) terms -> . TERM
    (37) terms -> . atom
    (38) terms -> . TERM COMMA terms
    (39) terms -> . atom COMMA terms
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    TERM            shift and go to state 51
    PREDICATE       shift and go to state 14

    terms                          shift and go to state 50
    atom                           shift and go to state 52

state 30

    (26) example -> EXAMPLE_KEY atom DOT .

    EXAMPLE_KEY     reduce using rule 26 (example -> EXAMPLE_KEY atom DOT .)
    MODEB_KEY       reduce using rule 26 (example -> EXAMPLE_KEY atom DOT .)
    MODEH_KEY       reduce using rule 26 (example -> EXAMPLE_KEY atom DOT .)
    NOT             reduce using rule 26 (example -> EXAMPLE_KEY atom DOT .)
    PREDICATE       reduce using rule 26 (example -> EXAMPLE_KEY atom DOT .)
    $end            reduce using rule 26 (example -> EXAMPLE_KEY atom DOT .)


state 31

    (28) example -> EXAMPLE_KEY atom bias . DOT

    DOT             shift and go to state 53


state 32

    (19) bias -> min_max_bias . weight_bias priority_bias
    (20) bias -> min_max_bias . priority_bias
    (21) bias -> min_max_bias . weight_bias
    (25) bias -> min_max_bias .
    (18) weight_bias -> . WEIGHT TERM
    (17) priority_bias -> . PRIORITY TERM

    DOT             reduce using rule 25 (bias -> min_max_bias .)
    WEIGHT          shift and go to state 36
    PRIORITY        shift and go to state 37

    weight_bias                    shift and go to state 54
    priority_bias                  shift and go to state 55

state 33

    (22) bias -> weight_bias . priority_bias
    (23) bias -> weight_bias .
    (17) priority_bias -> . PRIORITY TERM

    DOT             reduce using rule 23 (bias -> weight_bias .)
    PRIORITY        shift and go to state 37

    priority_bias                  shift and go to state 56

state 34

    (24) bias -> priority_bias .

    DOT             reduce using rule 24 (bias -> priority_bias .)


state 35

    (15) min_max_bias -> MAX . TERM MIN TERM
    (16) min_max_bias -> MAX . TERM

    TERM            shift and go to state 57


state 36

    (18) weight_bias -> WEIGHT . TERM

    TERM            shift and go to state 58


state 37

    (17) priority_bias -> PRIORITY . TERM

    TERM            shift and go to state 59


state 38

    (27) example -> EXAMPLE_KEY NOT atom . DOT
    (29) example -> EXAMPLE_KEY NOT atom . bias DOT
    (19) bias -> . min_max_bias weight_bias priority_bias
    (20) bias -> . min_max_bias priority_bias
    (21) bias -> . min_max_bias weight_bias
    (22) bias -> . weight_bias priority_bias
    (23) bias -> . weight_bias
    (24) bias -> . priority_bias
    (25) bias -> . min_max_bias
    (15) min_max_bias -> . MAX TERM MIN TERM
    (16) min_max_bias -> . MAX TERM
    (18) weight_bias -> . WEIGHT TERM
    (17) priority_bias -> . PRIORITY TERM

    DOT             shift and go to state 60
    MAX             shift and go to state 35
    WEIGHT          shift and go to state 36
    PRIORITY        shift and go to state 37

    bias                           shift and go to state 61
    min_max_bias                   shift and go to state 32
    weight_bias                    shift and go to state 33
    priority_bias                  shift and go to state 34

state 39

    (42) normal_clause -> atom IMPLIES body . DOT

    DOT             shift and go to state 62


state 40

    (45) literal -> NOT atom .

    COMMA           reduce using rule 45 (literal -> NOT atom .)
    DOT             reduce using rule 45 (literal -> NOT atom .)


state 41

    (41) constraint -> NOT body DOT .

    EXAMPLE_KEY     reduce using rule 41 (constraint -> NOT body DOT .)
    MODEB_KEY       reduce using rule 41 (constraint -> NOT body DOT .)
    MODEH_KEY       reduce using rule 41 (constraint -> NOT body DOT .)
    NOT             reduce using rule 41 (constraint -> NOT body DOT .)
    PREDICATE       reduce using rule 41 (constraint -> NOT body DOT .)
    $end            reduce using rule 41 (constraint -> NOT body DOT .)


state 42

    (43) body -> literal COMMA . body
    (43) body -> . literal COMMA body
    (44) body -> . literal
    (45) literal -> . NOT atom
    (46) literal -> . atom
    (47) literal -> . TERM OPERATOR TERM
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    NOT             shift and go to state 20
    TERM            shift and go to state 24
    PREDICATE       shift and go to state 14

    literal                        shift and go to state 22
    body                           shift and go to state 63
    atom                           shift and go to state 23

state 43

    (47) literal -> TERM OPERATOR . TERM

    TERM            shift and go to state 64


state 44

    (32) modeb -> MODEB_KEY schema DOT .

    EXAMPLE_KEY     reduce using rule 32 (modeb -> MODEB_KEY schema DOT .)
    MODEB_KEY       reduce using rule 32 (modeb -> MODEB_KEY schema DOT .)
    MODEH_KEY       reduce using rule 32 (modeb -> MODEB_KEY schema DOT .)
    NOT             reduce using rule 32 (modeb -> MODEB_KEY schema DOT .)
    PREDICATE       reduce using rule 32 (modeb -> MODEB_KEY schema DOT .)
    $end            reduce using rule 32 (modeb -> MODEB_KEY schema DOT .)


state 45

    (34) modeb -> MODEB_KEY schema bias . DOT

    DOT             shift and go to state 65


state 46

    (33) modeb -> MODEB_KEY NOT schema . DOT
    (35) modeb -> MODEB_KEY NOT schema . bias DOT
    (19) bias -> . min_max_bias weight_bias priority_bias
    (20) bias -> . min_max_bias priority_bias
    (21) bias -> . min_max_bias weight_bias
    (22) bias -> . weight_bias priority_bias
    (23) bias -> . weight_bias
    (24) bias -> . priority_bias
    (25) bias -> . min_max_bias
    (15) min_max_bias -> . MAX TERM MIN TERM
    (16) min_max_bias -> . MAX TERM
    (18) weight_bias -> . WEIGHT TERM
    (17) priority_bias -> . PRIORITY TERM

    DOT             shift and go to state 66
    MAX             shift and go to state 35
    WEIGHT          shift and go to state 36
    PRIORITY        shift and go to state 37

    bias                           shift and go to state 67
    min_max_bias                   shift and go to state 32
    weight_bias                    shift and go to state 33
    priority_bias                  shift and go to state 34

state 47

    (10) schema -> PREDICATE LPAREN . schema_terms RPAREN
    (11) schema_terms -> . MARKER TERM
    (12) schema_terms -> . MARKER TERM COMMA schema_terms
    (13) schema_terms -> . schema
    (14) schema_terms -> . schema COMMA schema_terms
    (10) schema -> . PREDICATE LPAREN schema_terms RPAREN

    MARKER          shift and go to state 69
    PREDICATE       shift and go to state 27

    schema_terms                   shift and go to state 68
    schema                         shift and go to state 70

state 48

    (30) modeh -> MODEH_KEY schema DOT .

    EXAMPLE_KEY     reduce using rule 30 (modeh -> MODEH_KEY schema DOT .)
    MODEB_KEY       reduce using rule 30 (modeh -> MODEH_KEY schema DOT .)
    MODEH_KEY       reduce using rule 30 (modeh -> MODEH_KEY schema DOT .)
    NOT             reduce using rule 30 (modeh -> MODEH_KEY schema DOT .)
    PREDICATE       reduce using rule 30 (modeh -> MODEH_KEY schema DOT .)
    $end            reduce using rule 30 (modeh -> MODEH_KEY schema DOT .)


state 49

    (31) modeh -> MODEH_KEY schema bias . DOT

    DOT             shift and go to state 71


state 50

    (9) atom -> PREDICATE LPAREN terms . RPAREN

    RPAREN          shift and go to state 72


state 51

    (36) terms -> TERM .
    (38) terms -> TERM . COMMA terms

    RPAREN          reduce using rule 36 (terms -> TERM .)
    COMMA           shift and go to state 73


state 52

    (37) terms -> atom .
    (39) terms -> atom . COMMA terms

    RPAREN          reduce using rule 37 (terms -> atom .)
    COMMA           shift and go to state 74


state 53

    (28) example -> EXAMPLE_KEY atom bias DOT .

    EXAMPLE_KEY     reduce using rule 28 (example -> EXAMPLE_KEY atom bias DOT .)
    MODEB_KEY       reduce using rule 28 (example -> EXAMPLE_KEY atom bias DOT .)
    MODEH_KEY       reduce using rule 28 (example -> EXAMPLE_KEY atom bias DOT .)
    NOT             reduce using rule 28 (example -> EXAMPLE_KEY atom bias DOT .)
    PREDICATE       reduce using rule 28 (example -> EXAMPLE_KEY atom bias DOT .)
    $end            reduce using rule 28 (example -> EXAMPLE_KEY atom bias DOT .)


state 54

    (19) bias -> min_max_bias weight_bias . priority_bias
    (21) bias -> min_max_bias weight_bias .
    (17) priority_bias -> . PRIORITY TERM

    DOT             reduce using rule 21 (bias -> min_max_bias weight_bias .)
    PRIORITY        shift and go to state 37

    priority_bias                  shift and go to state 75

state 55

    (20) bias -> min_max_bias priority_bias .

    DOT             reduce using rule 20 (bias -> min_max_bias priority_bias .)


state 56

    (22) bias -> weight_bias priority_bias .

    DOT             reduce using rule 22 (bias -> weight_bias priority_bias .)


state 57

    (15) min_max_bias -> MAX TERM . MIN TERM
    (16) min_max_bias -> MAX TERM .

    MIN             shift and go to state 76
    WEIGHT          reduce using rule 16 (min_max_bias -> MAX TERM .)
    PRIORITY        reduce using rule 16 (min_max_bias -> MAX TERM .)
    DOT             reduce using rule 16 (min_max_bias -> MAX TERM .)


state 58

    (18) weight_bias -> WEIGHT TERM .

    PRIORITY        reduce using rule 18 (weight_bias -> WEIGHT TERM .)
    DOT             reduce using rule 18 (weight_bias -> WEIGHT TERM .)


state 59

    (17) priority_bias -> PRIORITY TERM .

    DOT             reduce using rule 17 (priority_bias -> PRIORITY TERM .)


state 60

    (27) example -> EXAMPLE_KEY NOT atom DOT .

    EXAMPLE_KEY     reduce using rule 27 (example -> EXAMPLE_KEY NOT atom DOT .)
    MODEB_KEY       reduce using rule 27 (example -> EXAMPLE_KEY NOT atom DOT .)
    MODEH_KEY       reduce using rule 27 (example -> EXAMPLE_KEY NOT atom DOT .)
    NOT             reduce using rule 27 (example -> EXAMPLE_KEY NOT atom DOT .)
    PREDICATE       reduce using rule 27 (example -> EXAMPLE_KEY NOT atom DOT .)
    $end            reduce using rule 27 (example -> EXAMPLE_KEY NOT atom DOT .)


state 61

    (29) example -> EXAMPLE_KEY NOT atom bias . DOT

    DOT             shift and go to state 77


state 62

    (42) normal_clause -> atom IMPLIES body DOT .

    EXAMPLE_KEY     reduce using rule 42 (normal_clause -> atom IMPLIES body DOT .)
    MODEB_KEY       reduce using rule 42 (normal_clause -> atom IMPLIES body DOT .)
    MODEH_KEY       reduce using rule 42 (normal_clause -> atom IMPLIES body DOT .)
    NOT             reduce using rule 42 (normal_clause -> atom IMPLIES body DOT .)
    PREDICATE       reduce using rule 42 (normal_clause -> atom IMPLIES body DOT .)
    $end            reduce using rule 42 (normal_clause -> atom IMPLIES body DOT .)


state 63

    (43) body -> literal COMMA body .

    DOT             reduce using rule 43 (body -> literal COMMA body .)


state 64

    (47) literal -> TERM OPERATOR TERM .

    COMMA           reduce using rule 47 (literal -> TERM OPERATOR TERM .)
    DOT             reduce using rule 47 (literal -> TERM OPERATOR TERM .)


state 65

    (34) modeb -> MODEB_KEY schema bias DOT .

    EXAMPLE_KEY     reduce using rule 34 (modeb -> MODEB_KEY schema bias DOT .)
    MODEB_KEY       reduce using rule 34 (modeb -> MODEB_KEY schema bias DOT .)
    MODEH_KEY       reduce using rule 34 (modeb -> MODEB_KEY schema bias DOT .)
    NOT             reduce using rule 34 (modeb -> MODEB_KEY schema bias DOT .)
    PREDICATE       reduce using rule 34 (modeb -> MODEB_KEY schema bias DOT .)
    $end            reduce using rule 34 (modeb -> MODEB_KEY schema bias DOT .)


state 66

    (33) modeb -> MODEB_KEY NOT schema DOT .

    EXAMPLE_KEY     reduce using rule 33 (modeb -> MODEB_KEY NOT schema DOT .)
    MODEB_KEY       reduce using rule 33 (modeb -> MODEB_KEY NOT schema DOT .)
    MODEH_KEY       reduce using rule 33 (modeb -> MODEB_KEY NOT schema DOT .)
    NOT             reduce using rule 33 (modeb -> MODEB_KEY NOT schema DOT .)
    PREDICATE       reduce using rule 33 (modeb -> MODEB_KEY NOT schema DOT .)
    $end            reduce using rule 33 (modeb -> MODEB_KEY NOT schema DOT .)


state 67

    (35) modeb -> MODEB_KEY NOT schema bias . DOT

    DOT             shift and go to state 78


state 68

    (10) schema -> PREDICATE LPAREN schema_terms . RPAREN

    RPAREN          shift and go to state 79


state 69

    (11) schema_terms -> MARKER . TERM
    (12) schema_terms -> MARKER . TERM COMMA schema_terms

    TERM            shift and go to state 80


state 70

    (13) schema_terms -> schema .
    (14) schema_terms -> schema . COMMA schema_terms

    RPAREN          reduce using rule 13 (schema_terms -> schema .)
    COMMA           shift and go to state 81


state 71

    (31) modeh -> MODEH_KEY schema bias DOT .

    EXAMPLE_KEY     reduce using rule 31 (modeh -> MODEH_KEY schema bias DOT .)
    MODEB_KEY       reduce using rule 31 (modeh -> MODEH_KEY schema bias DOT .)
    MODEH_KEY       reduce using rule 31 (modeh -> MODEH_KEY schema bias DOT .)
    NOT             reduce using rule 31 (modeh -> MODEH_KEY schema bias DOT .)
    PREDICATE       reduce using rule 31 (modeh -> MODEH_KEY schema bias DOT .)
    $end            reduce using rule 31 (modeh -> MODEH_KEY schema bias DOT .)


state 72

    (9) atom -> PREDICATE LPAREN terms RPAREN .

    DOT             reduce using rule 9 (atom -> PREDICATE LPAREN terms RPAREN .)
    IMPLIES         reduce using rule 9 (atom -> PREDICATE LPAREN terms RPAREN .)
    MAX             reduce using rule 9 (atom -> PREDICATE LPAREN terms RPAREN .)
    WEIGHT          reduce using rule 9 (atom -> PREDICATE LPAREN terms RPAREN .)
    PRIORITY        reduce using rule 9 (atom -> PREDICATE LPAREN terms RPAREN .)
    COMMA           reduce using rule 9 (atom -> PREDICATE LPAREN terms RPAREN .)
    RPAREN          reduce using rule 9 (atom -> PREDICATE LPAREN terms RPAREN .)


state 73

    (38) terms -> TERM COMMA . terms
    (36) terms -> . TERM
    (37) terms -> . atom
    (38) terms -> . TERM COMMA terms
    (39) terms -> . atom COMMA terms
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    TERM            shift and go to state 51
    PREDICATE       shift and go to state 14

    terms                          shift and go to state 82
    atom                           shift and go to state 52

state 74

    (39) terms -> atom COMMA . terms
    (36) terms -> . TERM
    (37) terms -> . atom
    (38) terms -> . TERM COMMA terms
    (39) terms -> . atom COMMA terms
    (9) atom -> . PREDICATE LPAREN terms RPAREN

    TERM            shift and go to state 51
    PREDICATE       shift and go to state 14

    atom                           shift and go to state 52
    terms                          shift and go to state 83

state 75

    (19) bias -> min_max_bias weight_bias priority_bias .

    DOT             reduce using rule 19 (bias -> min_max_bias weight_bias priority_bias .)


state 76

    (15) min_max_bias -> MAX TERM MIN . TERM

    TERM            shift and go to state 84


state 77

    (29) example -> EXAMPLE_KEY NOT atom bias DOT .

    EXAMPLE_KEY     reduce using rule 29 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    MODEB_KEY       reduce using rule 29 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    MODEH_KEY       reduce using rule 29 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    NOT             reduce using rule 29 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    PREDICATE       reduce using rule 29 (example -> EXAMPLE_KEY NOT atom bias DOT .)
    $end            reduce using rule 29 (example -> EXAMPLE_KEY NOT atom bias DOT .)


state 78

    (35) modeb -> MODEB_KEY NOT schema bias DOT .

    EXAMPLE_KEY     reduce using rule 35 (modeb -> MODEB_KEY NOT schema bias DOT .)
    MODEB_KEY       reduce using rule 35 (modeb -> MODEB_KEY NOT schema bias DOT .)
    MODEH_KEY       reduce using rule 35 (modeb -> MODEB_KEY NOT schema bias DOT .)
    NOT             reduce using rule 35 (modeb -> MODEB_KEY NOT schema bias DOT .)
    PREDICATE       reduce using rule 35 (modeb -> MODEB_KEY NOT schema bias DOT .)
    $end            reduce using rule 35 (modeb -> MODEB_KEY NOT schema bias DOT .)


state 79

    (10) schema -> PREDICATE LPAREN schema_terms RPAREN .

    DOT             reduce using rule 10 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    MAX             reduce using rule 10 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    WEIGHT          reduce using rule 10 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    PRIORITY        reduce using rule 10 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    COMMA           reduce using rule 10 (schema -> PREDICATE LPAREN schema_terms RPAREN .)
    RPAREN          reduce using rule 10 (schema -> PREDICATE LPAREN schema_terms RPAREN .)


state 80

    (11) schema_terms -> MARKER TERM .
    (12) schema_terms -> MARKER TERM . COMMA schema_terms

    RPAREN          reduce using rule 11 (schema_terms -> MARKER TERM .)
    COMMA           shift and go to state 85


state 81

    (14) schema_terms -> schema COMMA . schema_terms
    (11) schema_terms -> . MARKER TERM
    (12) schema_terms -> . MARKER TERM COMMA schema_terms
    (13) schema_terms -> . schema
    (14) schema_terms -> . schema COMMA schema_terms
    (10) schema -> . PREDICATE LPAREN schema_terms RPAREN

    MARKER          shift and go to state 69
    PREDICATE       shift and go to state 27

    schema                         shift and go to state 70
    schema_terms                   shift and go to state 86

state 82

    (38) terms -> TERM COMMA terms .

    RPAREN          reduce using rule 38 (terms -> TERM COMMA terms .)


state 83

    (39) terms -> atom COMMA terms .

    RPAREN          reduce using rule 39 (terms -> atom COMMA terms .)


state 84

    (15) min_max_bias -> MAX TERM MIN TERM .

    WEIGHT          reduce using rule 15 (min_max_bias -> MAX TERM MIN TERM .)
    PRIORITY        reduce using rule 15 (min_max_bias -> MAX TERM MIN TERM .)
    DOT             reduce using rule 15 (min_max_bias -> MAX TERM MIN TERM .)


state 85

    (12) schema_terms -> MARKER TERM COMMA . schema_terms
    (11) schema_terms -> . MARKER TERM
    (12) schema_terms -> . MARKER TERM COMMA schema_terms
    (13) schema_terms -> . schema
    (14) schema_terms -> . schema COMMA schema_terms
    (10) schema -> . PREDICATE LPAREN schema_terms RPAREN

    MARKER          shift and go to state 69
    PREDICATE       shift and go to state 27

    schema_terms                   shift and go to state 87
    schema                         shift and go to state 70

state 86

    (14) schema_terms -> schema COMMA schema_terms .

    RPAREN          reduce using rule 14 (schema_terms -> schema COMMA schema_terms .)


state 87

    (12) schema_terms -> MARKER TERM COMMA schema_terms .

    RPAREN          reduce using rule 12 (schema_terms -> MARKER TERM COMMA schema_terms .)

